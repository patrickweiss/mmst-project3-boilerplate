{"version":3,"sources":["services/auth.js","components/Navbar.js","components/Startpage.js","components/ProjectList.js","components/ProjectForm.js","components/Projects.js","components/TaskForm.js","components/TaskList.js","components/ProjectDetail.js","components/TaskDetail.js","components/Signup.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","axios","post","then","response","data","catch","err","login","Navbar","props","className","bg","user","to","onClick","delete","setUser","Startpage","React","Component","ProjectList","projects","map","project","key","_id","title","ProjectForm","state","description","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","console","log","getData","Form","onSubmit","this","Group","Label","htmlFor","Control","type","id","onChange","Button","Projects","get","location","pathname","TaskForm","projectId","hideForm","TaskList","tasks","length","task","ProjectDetail","error","editForm","taskForm","match","params","status","message","deleteProject","history","push","toggleEdit","put","canUpdate","owner","variant","ProjectDetails","taskId","Signup","Alert","Login","App","projectsRoute","exact","path","component","render","TaskDetail","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9570bcb7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst signup = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/signup\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/login\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  axios.delete(\"/api/auth/logout\");\r\n};\r\n\r\nexport { signup, login, logout };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as Nav } from \"react-bootstrap\";\r\nimport { logout } from \"../services/auth\";\r\n\r\nconst Navbar = props => {\r\n  const handleLogout = () => {\r\n    // destroys the session on the server\r\n    logout();\r\n    // updates the `user` state in App\r\n    props.setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Nav className=\"nav justify-content-end\" bg=\"primary\">\r\n      {props.user ? (\r\n        <div>\r\n          <Link to=\"/\">Welcome {props.user.username}</Link>\r\n          <Link to=\"/projects\">Projects</Link>\r\n          <Link to=\"/\" onClick={handleLogout}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/signup\">Signup</Link>\r\n          <Link to=\"/login\">Login</Link>\r\n        </div>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nclass Startpage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Startpage</h1>\r\n                <p> ... this is the homepage of the application ... </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Startpage;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = props => {\r\n  return (\r\n    <div>\r\n      {props.projects.map(project => {\r\n        return (\r\n          <div key={project._id}>\r\n            <h3>\r\n              <Link to={`/projects/${project._id}`}>{project.title}</Link>\r\n            </h3>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nclass ProjectForm extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(\"SUBMIT\");\r\n\r\n    axios\r\n      .post(\"/api/projects\", {\r\n        title: this.state.title,\r\n        description: this.state.description\r\n      })\r\n      .then(response => {\r\n        this.props.getData();\r\n        this.setState({\r\n          title: \"\",\r\n          description: \"\"\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"title\">Title: </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n            onChange={this.handleChange}\r\n            value={this.state.title}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"description\">Description: </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            onChange={this.handleChange}\r\n            value={this.state.description}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\">Create a project</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectForm;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport ProjectForm from \"./ProjectForm\";\r\n\r\nclass Projects extends Component {\r\n  state = {\r\n    projects: []\r\n  };\r\n\r\n  getData = () => {\r\n    axios\r\n      .get(\"/api/projects\")\r\n      .then(response => {\r\n        this.setState({\r\n          projects: response.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Projects.render\"+this.props.location.pathname);\r\n    return (\r\n      <div className=\"projects-container\">\r\n        <ProjectList projects={this.state.projects} />\r\n        <ProjectForm getData={this.getData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default class TaskForm extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { title, description } = this.state;\r\n\r\n    axios\r\n      .post(\"/api/tasks\", {\r\n        title,\r\n        description,\r\n        projectId: this.props.projectId\r\n      })\r\n      .then(() => {\r\n        this.props.getData();\r\n        this.props.hideForm();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Add task: </h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Title:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Description:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={this.state.description}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\">Add</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TaskList = props => {\r\n  return (\r\n    <div>\r\n      {props.tasks.length > 0 && <h2>Tasks:</h2>}\r\n      {props.tasks.map(task => {\r\n        return (\r\n          <div key={task._id}>\r\n            <Link to={`/tasks/${task._id}`}>\r\n              <h3>{task.title}</h3>\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nclass ProjectDetail extends Component {\r\n  state = {\r\n    project: null,\r\n    error: \"\",\r\n    editForm: false,\r\n    taskForm: false,\r\n    title: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  getData = () => {\r\n    const id = this.props.match.params.id;\r\n \r\n    axios\r\n      .get(`/api/projects/${id}`)\r\n      .then(response => {\r\n        this.setState({\r\n          project: response.data,\r\n          title: response.data.title,\r\n          description: response.data.description\r\n        });\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status === 404) {\r\n          this.setState({\r\n            error: err.response.data.message\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  deleteProject = () => {\r\n    const id = this.props.match.params.id;\r\n    axios\r\n      .delete(`/api/projects/${id}`)\r\n      .then(response => {\r\n        // redirect to '/projects'\r\n        console.log(this.props.history);\r\n        this.props.history.push(\"/projects\"); // `/projects` is our client side route\r\n        // this.props.history comes from react-router-dom <Route>\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    this.setState({\r\n      editForm: !this.state.editForm\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const id = this.props.match.params.id;\r\n    axios\r\n      .put(`/api/projects/${id}`, {\r\n        title: this.state.title,\r\n        description: this.state.description\r\n      })\r\n      .then(response => {\r\n        this.setState({\r\n          project: response.data,\r\n          // title: response.data.title,\r\n          // description: response.data.description,\r\n          editForm: false\r\n        });\r\n        console.log(response);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state, this.props);\r\n    if (this.state.error) {\r\n      return <p>{this.state.error}</p>;\r\n    } else if (this.state.project === null) {\r\n      return <div></div>;\r\n    }\r\n\r\n    let canUpdate = false;\r\n\r\n    if (this.state.project.owner === this.props.user._id) {\r\n      canUpdate = true;\r\n    }\r\n    console.log(canUpdate);\r\n    return (\r\n      <div>\r\n        <h1>{this.state.project.title}</h1>\r\n        <p>{this.state.project.description}</p>\r\n\r\n        {canUpdate && (\r\n          <>\r\n            <Button onClick={this.toggleEdit}>Show Edit Form</Button>\r\n            <Button\r\n              onClick={() => this.setState({ taskForm: !this.state.taskForm })}\r\n            >\r\n              Show Task form\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.deleteProject}>\r\n              Delete Project\r\n            </Button>\r\n          </>\r\n        )}\r\n\r\n        {this.state.editForm && (\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <h2>Edit form</h2>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"title\">Title: </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"title\"\r\n                id=\"title\"\r\n                value={this.state.title}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"description\">Description: </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Edit</Button>\r\n          </Form>\r\n        )}\r\n\r\n        {this.state.taskForm && (\r\n          <TaskForm\r\n            projectId={this.state.project._id}\r\n            getData={this.getData}\r\n            hideForm={() => this.setState({ taskForm: false })}\r\n          />\r\n        )}\r\n\r\n        <TaskList tasks={this.state.project.tasks} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class ProjectDetails extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    project: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const taskId = this.props.match.params.id;\r\n\r\n    return axios\r\n      .get(`/api/tasks/${taskId}`)\r\n      .then(response => {\r\n        const { title, description, project } = response.data;\r\n        this.setState({ title, description, project });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const task = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      project: this.state.project\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>{task.title}</h1>\r\n        <p>{task.description}</p>\r\n        <Link to={`/projects/${task.project}`}>Back to project</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    signup(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/projects\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h2>Signup</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Sign up</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    login(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/projects\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Login</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Log in</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Startpage from \"./components/Startpage\";\r\nimport Projects from \"./components/Projects\";\r\nimport ProjectDetail from \"./components/ProjectDetail\";\r\nimport TaskDetail from \"./components/TaskDetail\";\r\nimport Signup from \"./components/Signup\";\r\nimport Login from \"./components/Login\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    user: this.props.user\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({\r\n      user: user\r\n    });\r\n  };\r\n\r\n  projectsRoute = props => {\r\n    if (this.state.user) {\r\n      return <Projects {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar user={this.state.user} setUser={this.setUser} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Startpage} />\r\n          <Route exact path=\"/signup\" render={\r\n            props => <Signup {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/login\" render={\r\n            props => <Login {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/projects\" render={this.projectsRoute}/>\r\n          <Route exact path=\"/projects/:id\" render={\r\n            props => <ProjectDetail user={this.state.user} {...props} />\r\n          }/>\r\n          <Route exact path=\"/tasks/:id\" component={TaskDetail} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\naxios.get(\"/api/auth/loggedin\").then(response => {\r\n  const user = response.data;\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App user={user} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}