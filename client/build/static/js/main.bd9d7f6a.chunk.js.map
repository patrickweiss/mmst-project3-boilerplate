{"version":3,"sources":["components/iq_utils.js","components/iq_diagram-canvas.js","components/iq_test-case.js","components/iq_result.js","components/iq_test.js","services/auth.js","components/iq_Navbar.js","components/iq_Startpage.js","components/iq_Signup.js","components/iq_Login.js","components/iq_Training.js","components/iq_Resultlist.js","components/iq_formula-canvas.js","components/iq_case-review.js","components/iq_test-review.js","App.js","serviceWorker.js","index.js"],"names":["Diagram","size","ctx","shapes","this","bkgd","color","fillStyle","fillRect","strokeStyle","lineWidth","symbols","id","includes","push","_drawSymbol","splice","indexOf","_clear","_redraw","clearRect","s","_drawA1","_drawA2","_drawA3","_drawA4","_drawB1","_drawB2","_drawB3","_drawB4","_drawC1","_drawC2","_drawC3","_drawC4","_drawD1","_drawD2","_drawD3","_drawD4","_drawE1","_drawE2","_drawE3","_drawE4","_drawF1","_drawF2","_drawF3","_drawF4","_drawLeft","_drawRight","_drawRightCompl","_drawAND","_drawOR","_drawXOR","beginPath","moveTo","lineTo","stroke","r","arc","Math","PI","fill","_strokeStar","a","closePath","x","y","n","inset","save","translate","i","rotate","restore","decodePicture","hexPic","categories","res","padded","valid","substr","length","catName","numCat","parseInt","charAt","shape2","shape3","shape4","DiagramCanvas","props","diagram","refs","canvas","getContext","ref","width","height","Component","TestCase","selectShapeHandler","e","btnShape","currentTarget","newAnswer","state","answer","newBtnStates","btnStates","setState","resetAnswerHandler","btnStatesCopy","key","nextCaseHandler","cat","toString","encodePicture","A1","B1","C1","D1","E1","F1","A2","B2","C2","D2","E2","F2","A3","B3","C3","D3","E3","F3","A4","B4","C4","D4","E4","F4","init","case","className","line1","arg1","arg2","result","line2","line3","onClick","map","c","Iqresult","console","log","axios","get","then","response","data","catch","err","scores","score","questions","numberOfCases","ergebnis","round","userName","testName","elapsedTime","complexity","to","style","textDecoration","IQttyTest","clearTimeout","caseTimer","currentCaseIdx","animOn","endOfTest","answers","loadTimer","setTimeout","animTimeout","bind","animLimit","cases","testTime","Date","getTime","caseStartTimestamp","answersCopy","currentScore","answerCorrect","finishTest","caseLimit","match","params","timeout","test","caseTimeout","sysAnswer","testResult","toFixed","testId","_id","post","fromServer","resFromApi","testData","arrayOfCases","curTest","src","alt","curCase","signup","username","password","login","IqNavbar","bg","fixed","user","delete","setUser","IqStartpage","React","IqSignup","error","handleChange","event","target","name","value","handleSubmit","preventDefault","message","history","Form","onSubmit","Group","Label","htmlFor","Control","type","onChange","Alert","variant","Button","IqLogin","IqTraining","handleComplexity","handleTimeout","checked","IqResultlist","results","resultList","caseNumber","resultInPercentage","FormulaCanvas","catPic","idx","toUpperCase","split","join","opName","line","lineNum","CaseReview","caseObj","ops","opDesc","listOfComponentsJSX","catOps","TestReview","lessBtnHandler","isDetailViewCopy","isDetailView","moreBtnHandler","answer1","answer2","resultId","resultData","testDataFromApi","listOfCasesJSX","compare","caseIdx","App","trainingRoute","resultListRoute","resultRoute","testNewRoute","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd9d7f6a.chunk.js","sourcesContent":["export default class Diagram {\r\n    constructor(size,ctx,shapes) {\r\n      this.size = size;\r\n      this.bkgd = \"white\";\r\n      this.color = \"black\";\r\n      this.ctx = ctx; \r\n      this.ctx.fillStyle = this.bkgd;\r\n      this.ctx.fillRect(0,0,size,size);\r\n      this.ctx.fillStyle = this.color;\r\n      this.ctx.strokeStyle = this.color;\r\n      this.ctx.lineWidth = 1.2;\r\n      this.symbols = shapes; \r\n   }\r\n   \r\n    addSymbol(id) {\r\n      if (this.symbols.includes(id)) return;\r\n      this.symbols.push(id);\r\n      this._drawSymbol(id);\r\n    }\r\n   \r\n    deleteSymbol(id) {\r\n      if (!this.symbols.includes(id)) return;\r\n      this.symbols.splice(this.symbols.indexOf(id), 1);\r\n      this._clear();\r\n      this._redraw();\r\n    }\r\n  \r\n    clearDiagram() {\r\n      this.symbols = [];\r\n      this._clear();\r\n    }    \r\n  \r\n    _clear() {\r\n      this.ctx.clearRect(0,0,this.size,this.size);\r\n      this.ctx.fillStyle = this.bkgd;\r\n      this.ctx.fillRect(0,0,this.size,this.size);\r\n      this.ctx.fillStyle = this.color;\r\n    }\r\n  \r\n    _redraw() {\r\n      let s;\r\n      for (s of this.symbols) this._drawSymbol(s);\r\n    }\r\n  \r\n    _drawSymbol(id) {\r\n      switch (id)  {\r\n        case \"A1\": this._drawA1(); break;\r\n        case \"A2\": this._drawA2(); break;\r\n        case \"A3\": this._drawA3(); break;\r\n        case \"A4\": this._drawA4(); break;\r\n        case \"B1\": this._drawB1(); break;\r\n        case \"B2\": this._drawB2(); break;\r\n        case \"B3\": this._drawB3(); break;\r\n        case \"B4\": this._drawB4(); break;\r\n        case \"C1\": this._drawC1(); break;\r\n        case \"C2\": this._drawC2(); break;\r\n        case \"C3\": this._drawC3(); break;\r\n        case \"C4\": this._drawC4(); break;\r\n        case \"D1\": this._drawD1(); break;\r\n        case \"D2\": this._drawD2(); break;\r\n        case \"D3\": this._drawD3(); break;\r\n        case \"D4\": this._drawD4(); break;\r\n        case \"E1\": this._drawE1(); break;\r\n        case \"E2\": this._drawE2(); break;\r\n        case \"E3\": this._drawE3(); break;\r\n        case \"E4\": this._drawE4(); break;\r\n        case \"F1\": this._drawF1(); break;\r\n        case \"F2\": this._drawF2(); break;\r\n        case \"F3\": this._drawF3(); break;\r\n        case \"F4\": this._drawF4(); break;\r\n        case \"Left\": this._drawLeft(); break;\r\n        case \"Right\": this._drawRight(); break;\r\n        case \"RightCompl\": this._drawRightCompl(); break;\r\n        case \"AND\": this._drawAND(); break;\r\n        case \"OR\": this._drawOR(); break;\r\n        case \"XOR\": this._drawXOR(); break;\r\n        default:\r\n     }         \r\n   }\r\n  \r\n    _drawA1() {\r\n      //Line vertical\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, 0);\r\n      this.ctx.lineTo(this.size/2, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA2() {\r\n      //Line horizontal\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0, this.size/2);\r\n      this.ctx.lineTo(this.size, this.size/2);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA3() {\r\n      //Diagonal left\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0, 0);\r\n      this.ctx.lineTo(this.size, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA4() {\r\n      //Diagonal right\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size, 0);\r\n      this.ctx.lineTo(0, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB1() {\r\n      //Arc top left\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 1*Math.PI, 1.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB2() {\r\n      //Arc top right\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 1.5*Math.PI, 0);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB3() {\r\n      //Arc bottom left\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 0.5*Math.PI, 1*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n    \r\n    _drawB4() {\r\n      //Arc bottom right\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 0, 0.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawC1() {\r\n      //Dot top left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(4,4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC2() {\r\n      //Dot top right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-4,4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC3() {\r\n      //Dot bottom right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-4,this.size-4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC4() {\r\n      //Dot bottom left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(4,this.size-4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawD1() {\r\n      //Star small\r\n      const r = 0.1*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD2() {\r\n      //Star medium\r\n      const r = 0.16*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD3() {\r\n      //Star large\r\n      const r = 0.22*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD4() {\r\n      //Square\r\n      const a = this.size - 4;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(2, 2);\r\n      this.ctx.lineTo(a+2, 2);\r\n      this.ctx.lineTo(a+2, a+2);\r\n      this.ctx.lineTo(2, a+2);\r\n      this.ctx.closePath();\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawE1() {\r\n      //Arrow up\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, this.size/2-8);\r\n      this.ctx.lineTo(this.size/2+6, this.size/2);\r\n      this.ctx.lineTo(this.size/2-6, this.size/2);\r\n      this.ctx.closePath();\r\n      this.ctx.fill();\r\n      this.ctx.lineWidth = 4;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, this.size/2);\r\n      this.ctx.lineTo(this.size/2, this.size/2+8);\r\n      this.ctx.stroke();\r\n      this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE2() {\r\n    //Arrow right\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2+8, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2+6);\r\n    this.ctx.lineTo(this.size/2, this.size/2-6);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2-8, this.size/2);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE3() {\r\n    //Arrow down\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2+8);\r\n    this.ctx.lineTo(this.size/2-6, this.size/2);\r\n    this.ctx.lineTo(this.size/2+6, this.size/2);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2-8);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE4() {\r\n    //Arrow left\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2-8, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2-6);\r\n    this.ctx.lineTo(this.size/2, this.size/2+6);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2+8, this.size/2);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawF1() {\r\n      //Circle top\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2,6, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF2() {\r\n      //Circle bottom\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2,this.size-6, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF3() {\r\n      //Circle left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(6,this.size/2, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF4() {\r\n      //Circle right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-6,this.size/2, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _strokeStar(ctx, x, y, r, n, inset) {\r\n    //Adaptable to any shape with rotational symmetry\r\n    //from https://stackoverflow.com/questions/25837158/how-to-draw-a-star-by-using-canvas-html5\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.translate(x, y);\r\n    ctx.moveTo(0,0-r);\r\n    for (var i = 0; i < n; i++) {\r\n        ctx.rotate(Math.PI / n);\r\n        ctx.lineTo(0, 0 - (r*inset));\r\n        ctx.rotate(Math.PI / n);\r\n        ctx.lineTo(0, 0 - r);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    }\r\n\r\n    _drawLeft() {\r\n      //Left paranthesis\r\n      const r = 0.8*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(1.5*this.size, this.size/2, r, 0.5*Math.PI, 1.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n\r\n    _drawRight() {\r\n      //Right paranthesis and equality sign\r\n      const r = 0.8*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(-0.5*this.size, this.size/2, r, 1.5*Math.PI, 0.5*Math.PI);\r\n      this.ctx.moveTo(0.6*this.size, 0.45*this.size);\r\n      this.ctx.lineTo(0.9*this.size, 0.45*this.size);\r\n      this.ctx.moveTo(0.6*this.size, 0.55*this.size);\r\n      this.ctx.lineTo(0.9*this.size, 0.55*this.size);\r\n      this.ctx.stroke();\r\n    }\r\n\r\n    _drawRightCompl() {\r\n      //Right paranthesis, complement symbol and equality sign\r\n      this._drawRight();\r\n      const r = 0.12*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(0.5*this.size, 0.14*this.size, r, 0.4*Math.PI, 1.6*Math.PI);\r\n      this.ctx.stroke();            \r\n    }\r\n\r\n    _drawAND() {\r\n      //Union operator\r\n      const r = 0.25*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(0.6*this.size, 0.6*this.size, r, Math.PI, 2*Math.PI);\r\n      this.ctx.moveTo(0.6*this.size+r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size+r, 0.75*this.size);\r\n      this.ctx.moveTo(0.6*this.size-r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size-r, 0.75*this.size);\r\n      this.ctx.stroke();       \r\n    }\r\n\r\n    _drawOR() {\r\n      //Intersection operator\r\n      const r = 0.25*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(0.6*this.size, 0.6*this.size, r, 0, Math.PI);\r\n      this.ctx.moveTo(0.6*this.size+r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size+r, 0.45*this.size);\r\n      this.ctx.moveTo(0.6*this.size-r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size-r, 0.45*this.size);\r\n      this.ctx.stroke();   \r\n\r\n    }\r\n\r\n    _drawXOR() {\r\n      //Symmetric difference operator\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0.5*this.size, 0.25*this.size);\r\n      this.ctx.lineTo(0.8*this.size, 0.75*this.size);\r\n      this.ctx.lineTo(0.2*this.size, 0.75*this.size);\r\n      this.ctx.closePath();\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n  }  //end of Diagram class\r\n\r\n  export function decodePicture(hexPic) {\r\n    //return array of symbols for display in a diagram\r\n    let categories = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\r\n    let res = [];\r\n    \r\n    //Padding leading zeros to get the hexPic of LENGTH 6!!!\r\n    let padded = \"0000000000\" + hexPic;\r\n    let valid = padded.substr(padded.length - 6);\r\n    \r\n    for (let i = 0; i < categories.length; i++)  {\r\n      let catName = categories[i];\r\n      let numCat = parseInt(valid.charAt(i), 16);\r\n      let shape1 =  (numCat & 8) >> 3;\r\n      let shape2 =  (numCat & 4) >> 2;\r\n      let shape3 =  (numCat & 2) >> 1;\r\n      let shape4 =  (numCat & 1);\r\n      if (shape1) res.push(catName+\"1\");  \r\n      if (shape2) res.push(catName+\"2\");  \r\n      if (shape3) res.push(catName+\"3\");  \r\n      if (shape4) res.push(catName+\"4\");  \r\n    } \r\n    return res;   \r\n  }\r\n  \r\nexport function encodePicture(symbols) {\r\n    //return a hexadecimal string 6-char long\r\n    let categories = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\r\n    let res = \"\";  \r\n    for (let i = 0; i < categories.length; i++)  {  \r\n      let cat =  categories[i];\r\n      let d1 = symbols.includes(cat+\"1\");\r\n      let d2 = symbols.includes(cat+\"2\");\r\n      let d3 = symbols.includes(cat+\"3\");\r\n      let d4 = symbols.includes(cat+\"4\");\r\n      let r = (d1*8 + d2*4 + d3*2 + d4).toString(16);\r\n      res = res + r;\r\n    }  \r\n    return res;  \r\n  } \r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Diagram from './iq_utils.js';\r\n\r\nexport default class DiagramCanvas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.size = 48; \r\n        this.diagram = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(\">>>>>>>> componentDidMount...\");\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        this.diagram = new Diagram (this.size, ctx, this.props.shapes);\r\n        this.diagram._redraw();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(\">>>>>>>> componentDidUpdate...\");\r\n        this.diagram.symbols = this.props.shapes;\r\n        this.diagram._clear();\r\n        this.diagram._redraw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas ref=\"canvas\" width={this.size} height={this.size}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../iq_test-style.css';\r\nimport DiagramCanvas from './iq_diagram-canvas.js';\r\nimport {decodePicture, encodePicture} from \"./iq_utils.js\";\r\n\r\nexport default class TestCase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            answer: [],\r\n            btnStates: {A1:\"off\", B1:\"off\", C1:\"off\", D1:\"off\", E1:\"off\", F1:\"off\",\r\n                        A2:\"off\", B2:\"off\", C2:\"off\", D2:\"off\", E2:\"off\", F2:\"off\",\r\n                        A3:\"off\", B3:\"off\", C3:\"off\", D3:\"off\", E3:\"off\", F3:\"off\",\r\n                        A4:\"off\", B4:\"off\", C4:\"off\", D4:\"off\", E4:\"off\", F4:\"off\"}\r\n        }\r\n    }\r\n\r\n\r\n    selectShapeHandler = (e) => {\r\n        const btnShape = e.currentTarget.id;\r\n        const newAnswer = [...this.state.answer];\r\n        const newBtnStates = {...this.state.btnStates};\r\n\r\n        if (newBtnStates[btnShape] === \"off\") {//adding to the Answer, duplicates not allowed\r\n            if (newAnswer.indexOf(btnShape) < 0) {\r\n              newAnswer.push(btnShape);\r\n              newBtnStates[btnShape] = \"on\";\r\n              this.setState ({answer: newAnswer, btnStates: newBtnStates});\r\n            }\r\n        }\r\n        else if (newBtnStates[btnShape] === \"on\") {//removing from the Answer,\r\n            if (newAnswer.indexOf(btnShape) >= 0) {\r\n                newAnswer.splice(newAnswer.indexOf(btnShape), 1);\r\n                newBtnStates[btnShape] = \"off\";\r\n                this.setState ({answer: newAnswer, btnStates: newBtnStates});\r\n            }\r\n        }\r\n    }\r\n\r\n    resetAnswerHandler = () => {\r\n        const btnStatesCopy = {...this.state.btnStates};\r\n        for (let key in btnStatesCopy) btnStatesCopy[key] = \"off\";\r\n        this.setState ({answer: [], btnStates: btnStatesCopy});\r\n    }\r\n\r\n    nextCaseHandler = () => {\r\n        this.props.nextCaseHandler(encodePicture(this.state.answer))\r\n        this.resetAnswerHandler();\r\n    }\r\n\r\n           \r\n    render() {\r\n\r\n        const init = (this.props.case === null); \r\n  \r\n        return (\r\n            <div>\r\n\r\n                <div id =\"test-and-loader\">\r\n\r\n                    <div id=\"test-container\">\r\n                        <div className=\"canvas-matrix\">  \r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.result)}/></div>\r\n                            </div>\r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.result)}/></div>\r\n                            </div>\r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line3.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line3.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={this.state.answer}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"nav-buttons\">\r\n                            <button className={init ? \"nav-btn-init shake\": \"nav-btn\"}   \r\n                                    onClick={this.nextCaseHandler}> {init ? \"Start Test\": \"Submit\"} </button>\r\n                            <button className=\"nav-btn\"  \r\n                                    onClick={this.resetAnswerHandler}>Reset</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"canvas-matrix\">\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+1]} \r\n                                key={c+1} id={c+1} onClick={this.selectShapeHandler} >\r\n                            <DiagramCanvas shapes={[c+1]} />\r\n                        </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+2]} \r\n                                key={c+2} id={c+2} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+2]} />\r\n                        </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+3]} \r\n                                key={c+3} id={c+3} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+3]} />\r\n                        </button>\r\n                        )}\r\n                     </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+4]} \r\n                                key={c+4} id={c+4} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+4]} />\r\n                        </button>\r\n                        )}                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../stylesheets/iq_result.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport class Iqresult extends Component {\r\n    state = {\r\n      result: [],\r\n    };\r\n  \r\n    componentDidMount() {\r\n      console.log(\"App --> componentDidMount()\")\r\n      axios.get(\"/api/results\")\r\n          .then(response => {\r\n            console.log(\"Response Data\", response.data)\r\n              console.log(\"App --> Promise resolved\")\r\n              this.setState({result: response.data});\r\n          })\r\n      .catch(err=>{\r\n        console.log(\"Fehler bei iq_result Component Did mount\", err);\r\n      })\r\n  }\r\n\r\n\r\n \r\n  render() {\r\n    \r\n    console.log(this.state.result);\r\n   // console.log(this.state.result.userName); \r\n    let scores = this.state.result.score;\r\n    let questions = this.state.result.numberOfCases;\r\n    let ergebnis = (Math.round((scores / questions) * 100)).toString()\r\n\r\n\r\n\r\n    return (\r\n     \r\n      <div className=\"resultPage\">\r\n        <div className=\"resultHeader\">\r\n          <h1>\r\n            Result of your current test\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"tableresult\">\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Name :</div>\r\n            <div className=\"resulttd\">{this.state.result.userName}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Test Name :</div>\r\n            <div className=\"resulttd\">{this.state.result.testName}</div>\r\n          </div>\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Elapsed Time :</div>\r\n            <div className=\"resulttd\">{this.state.result.elapsedTime}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Executed Cases :</div>\r\n            <div className=\"resulttd\">{this.state.result.numberOfCases}</div>\r\n          </div>\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Your Score :</div>\r\n            <div className=\"resulttd\">{this.state.result.score}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Complexity :</div>\r\n            <div className=\"resulttd\">{this.state.result.complexity}</div>\r\n          </div>\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Percentage :</div>\r\n            <div className=\"resulttd\">{ergebnis}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"resultfooter\">\r\n          <h1>You have reached : {this.state.result.score}  Points</h1>\r\n        </div>\r\n\r\n        <div className=\"buttonbox\">\r\n          \r\n        <Link to=\"/training\" style={{color:'white', textDecoration:'none'}}>\r\n            <button className=\"rbutton\">Training</button>\r\n        </Link>\r\n        <Link to=\"/resultlist\" style={{color:'white', textDecoration:'none'}} >\r\n            <button className=\"rbutton\">Resultlist</button>\r\n        </Link>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Iqresult\r\n\r\n","import React, { Component } from 'react'\r\nimport '../iq_test-style.css';\r\nimport TestCase from './iq_test-case.js';\r\nimport Iqresult from \"./iq_result\";\r\nimport axios from 'axios';\r\n\r\nexport default class IQttyTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.caseStartTimestamp = 0;\r\n    this.testTime = 0;            //sum of case times \r\n    this.caseLimit = (this.props.match.params.timeout === \"yes\") ? 90*1000 : 60*60*1000;  //time limit per case\r\n    this.animLimit = 2 * 1000;    //time between cases\r\n    this.caseTimer = 0;\r\n    this.loadTimer = 0;\r\n    this.currentScore = 0;\r\n\r\n    this.state = {\r\n      test: null,   //Test obj from DB  \r\n      cases: null,  //Array of cases from DB \r\n      currentCaseIdx: -1,\r\n      answers: [],\r\n      endOfTest: false,\r\n      animOn: false\r\n    }\r\n  }\r\n    \r\n  nextCaseHandler = (answer) => {\r\n    clearTimeout(this.caseTimer);\r\n\r\n    if (this.state.currentCaseIdx === - 1) {        //Load the first case\r\n      this.setState ({\r\n        currentCaseIdx: this.state.currentCaseIdx + 1,\r\n        animOn: true,\r\n        endOfTest: false,\r\n        answers: []\r\n      });\r\n      this.loadTimer = setTimeout(this.animTimeout.bind(this), this.animLimit);\r\n      return;\r\n    }\r\n\r\n    if (this.state.currentCaseIdx === this.state.cases.length - 1) {  //Finish the test\r\n\r\n      this.testTime = this.testTime + ((new Date()).getTime() - this.caseStartTimestamp);\r\n\r\n      const answersCopy = [...this.state.answers];\r\n      answersCopy.push(answer)\r\n      //check answer and update score\r\n      this.currentScore = this.answerCorrect(answer) ? this.currentScore + 1 : this.currentScore;\r\n\r\n      this.finishTest(answersCopy);\r\n\r\n      this.setState({answers: answersCopy,\r\n                     animOn: false,\r\n                     endOfTest: true  \r\n      });\r\n      return;\r\n    }\r\n    \r\n    this.testTime = this.testTime + ((new Date()).getTime() - this.caseStartTimestamp);\r\n    \r\n    //check answer and update score\r\n    this.currentScore = this.answerCorrect(answer) ? this.currentScore + 1 : this.currentScore;\r\n\r\n    const answersCopy = [...this.state.answers];\r\n    answersCopy.push(answer)\r\n    this.setState ({\r\n      currentCaseIdx: this.state.currentCaseIdx + 1,\r\n      animOn: true,\r\n      endOfTest: false,\r\n      answers: answersCopy\r\n    });\r\n\r\n    this.loadTimer = setTimeout(this.animTimeout.bind(this), this.animLimit);\r\n    \r\n  }\r\n\r\n  animTimeout() {\r\n    this.caseStartTimestamp = (new Date()).getTime();\r\n    this.setState ({animOn: false});\r\n    this.caseTimer = setTimeout(this.caseTimeout.bind(this), this.caseLimit);\r\n\r\n  }\r\n    \r\n  caseTimeout() {\r\n      this.nextCaseHandler(\"000000\");\r\n  }\r\n\r\n  answerCorrect(answer) { \r\n    const sysAnswer = this.state.cases[this.state.currentCaseIdx].line3.result;\r\n    const correct = (parseInt(answer,16) === parseInt(sysAnswer,16)); \r\n    //console.log(\">>> System answer: \" + sysAnswer + \" Your answer: \" + answer + \" is \" + correct );\r\n    return correct;\r\n  }\r\n\r\n  finishTest(answers) {\r\n\r\n    //NOTE: In order to store answers, a model extension will be required\r\n    //Suggestion: store the testId as well\r\n\r\n    const testResult = { \r\n      userName: this.props.userName, \r\n      testName: this.state.test.testName,\r\n      complexity: this.state.test.complexity,\r\n      elapsedTime: (this.testTime/1000).toFixed(1),\r\n      numberOfCases: this.state.test.cases.length,\r\n      score: this.currentScore,\r\n      answers: answers,\r\n      testId: this.state.test._id\r\n  \r\n    }\r\n\r\n    //Send result to the DB\r\n    axios.post(\"/api/results\", testResult) \r\n      .then(fromServer => {  \r\n        //console.log(\"Result stored. Response from server: \" + fromServer.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"ERROR while storing the test result: \", err);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.props.match.params.complexity)\r\n      axios.get(`/api/tests?complexity=${this.props.match.params.complexity}`)  \r\n        .then(resFromApi => {\r\n          this.setState({\r\n            test: resFromApi.data.testData,\r\n            cases: resFromApi.data.arrayOfCases\r\n          })\r\n        });\r\n    else \r\n      axios.get(`/api/tests/id/${this.props.match.params.testId}`)\r\n        .then(resFromApi => {\r\n          this.setState({\r\n            test: resFromApi.data.testData,\r\n            cases: resFromApi.data.arrayOfCases\r\n          })\r\n        });      \r\n  }\r\n\r\n  render() {    \r\n    /*if (!this.state.test) \r\n      return (\r\n        <div className='error-msg'>\r\n          <h3>Sorry! No test available</h3>\r\n        </div>\r\n      );*/  \r\n\r\n    if (this.state.endOfTest)\r\n      return (\r\n        <div>\r\n          <Iqresult />\r\n        </div>\r\n      ); \r\n\r\n    else if (this.state.animOn) {\r\n      //const curTest = this.props.test;\r\n      const curTest = this.state.test;\r\n      return (\r\n          <div>\r\n            <div id=\"header\">\r\n                <div><h2><span>Test: </span> <span id=\"test-name\">{curTest.testName}</span></h2></div>   \r\n                <div>\r\n                    <h3 id=\"current-case\">\r\n                      Case: {this.state.currentCaseIdx + 1} / {this.state.cases.length}\r\n                    </h3>\r\n                </div>   \r\n                <div><h3><span>Complexity: </span><span id=\"complexity\">{curTest.complexity}</span></h3></div>                \r\n            </div>\r\n            <div>\r\n              <img src=\"/robot.gif\" alt=\"\" width=\"500\"/>\r\n            \r\n            </div>            \r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.currentCaseIdx === -1) {\r\n      return (\r\n        <div className = \"testpage-background\">\r\n            <TestCase case={null} nextCaseHandler={this.nextCaseHandler} />\r\n            <div> \r\n              Your test has not started yet.<br/>\r\n              Now, you have time for getting familiar with the layout and buttons.<br/>\r\n              The keyboard at the bottom consists of 24 buttons representing \r\n              6 sets of shapes: lines, arcs, dots, stars and square, arrows, and circles.\r\n              By clicking on a button you are adding a corresponding shape to your answer.\r\n              By clicking it again you are revoking your choice. Please try.<br/>\r\n\r\n              The Reset button will clear your answer completely. Try this one, too.<br/>\r\n\r\n              The Start Test will load the first test case and the test will begin.\r\n\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      const curTest = this.state.test;\r\n      const curCase = this.state.cases[this.state.currentCaseIdx];\r\n      return (\r\n        <div className = \"testpage-background\">\r\n            <div id=\"header\">\r\n                <div><h2><span>Test: </span> <span id=\"test-name\">{curTest.testName}</span></h2></div>   \r\n                <div>\r\n                    <h3 id=\"current-case\">\r\n                      Case: {this.state.currentCaseIdx + 1} / {this.state.cases.length}\r\n                    </h3>\r\n                </div>   \r\n                <div><h3><span>Complexity: </span><span id=\"complexity\">{curTest.complexity}</span></h3></div>  \r\n            </div>\r\n            <TestCase case={curCase} nextCaseHandler={this.nextCaseHandler} />\r\n            {(this.state.currentCaseIdx === 0) ?\r\n              <div> \r\n                Your first test case is there!<br/>\r\n\r\n                In the  3x3 matrix you see a mix of shapes.<br/>\r\n                Your first step is to identify the shape categories used.<br/>\r\n                Then, for each category, please analyze the logic applied to the \r\n                category in rows 1 and 2. <br/>Finally, choose your answer in row 3, using the same logic.<br/>\r\n\r\n                When you are ready with your answer please Submit to proceed to the next test case.<br/>\r\n\r\n                If you are interested, here is a small tip for you: the \"logic\" is based on the basic\r\n                set operations: union, intersection, complement, and symmetric difference.<br/>\r\n                -------- wiki link ----------\r\n              </div>\r\n              : null              \r\n              }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\n\r\nconst signup = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/signup\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/login\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  axios.delete(\"/api/auth/logout\");\r\n};\r\n\r\nexport { signup, login, logout };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as Nav } from \"react-bootstrap\";\r\nimport { logout } from \"../services/auth\";\r\n\r\nconst IqNavbar = props => {\r\n  const handleLogout = () => {\r\n    // destroys the session on the server\r\n    logout();\r\n    // updates the `user` state in App\r\n    props.setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Nav className=\"nav justify-content-end\" bg=\"primary\" fixed=\"top\">\r\n      {props.user ? (\r\n        <div>\r\n          <Link to=\"/\">Welcome {props.user.username}</Link>\r\n          <Link to=\"/training\">Training</Link>\r\n          \r\n          <Link to=\"/resultlist\">Resultlist</Link>\r\n          <Link to=\"/\" onClick={handleLogout}>Logout</Link>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/signup\">Signup</Link>\r\n          <Link to=\"/login\">Login</Link>\r\n        </div>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default IqNavbar;\r\n","import React from \"react\";\r\nimport \"../stylesheets/iq_startpage.css\";\r\n\r\nclass IqStartpage extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <section className=\"homePage-container\">\r\n        <div>\r\n          <h1>IQtty</h1>\r\n          <p>Use our brain trainer</p>\r\n          <p>Prepare for Assessment Centers and Logic-Tests</p>\r\n          <p>Signup and try our amazing brain game</p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqStartpage;\r\n","import React, { Component } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass IqSignup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    signup(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/training\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h2 className = \"signup-login-header\">Signup</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Sign up</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqSignup;\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass IqLogin extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    login(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/training\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className = \"signup-login-header\">Login</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Log in</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqLogin;\r\n","import React, { Component } from \"react\";\r\nimport \"../stylesheets/iq_training.css\";\r\nimport { Link } from \"react-router-dom\";\r\n//import IQttyTest from \"./iq_test\";\r\n//import { Tooltip } from \"react-bootstrap\";\r\nclass IqTraining extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      complexity: \"Low\",\r\n      timeout: \"no\",\r\n      //runTest: false\r\n    };\r\n\r\n    this.handleComplexity = this.handleComplexity.bind(this);\r\n    this.handleTimeout = this.handleTimeout.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this); \r\n    //this.startTestHandler = this.startTestHandler.bind(this);\r\n  }\r\n\r\n  handleComplexity(event) {\r\n    this.setState({\r\n      complexity: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTimeout(event) {\r\n    this.setState({\r\n      timeout: event.target.value\r\n    });\r\n  }\r\n\r\n  /*\r\n  startTestHandler(event) {\r\n    console.log(\"Start Test Button clicked\");\r\n    console.log(this.state.complexity);\r\n    console.log(this.state.timeout);\r\n    this.setState({\r\n      runTest: true\r\n    });\r\n  }*/\r\n\r\n  render() {\r\n\r\n      return (\r\n        <section className=\"trainingsPage-container\">\r\n          <div>\r\n            <h1>Welcome to IQtty training</h1>\r\n            <p>\r\n              Matrix tests are used in assessment centers to examine your skills\r\n              in inductive reasoning.\r\n            </p>\r\n            <p>A matrix consists of nine boxes. One box is empty.</p>\r\n            <p>\r\n              Your task is to discover logical connections and compose the empty\r\n              box based on the rule you found.\r\n            </p>\r\n            <p>Click here to start a test</p>\r\n\r\n           \r\n\r\n            <section id=\"selection\">\r\n              <article>\r\n                <h3>\r\n                  {\" \"}\r\n                  <p>Select the complexity of your Test:</p>\r\n                </h3>\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"Low\"\r\n                      checked={true}\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                    Low\r\n                  </label>\r\n                </li>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"Medium\"\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                    Medium\r\n                  </label>\r\n                </li>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"High\"\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                    High\r\n                  </label>\r\n                </li>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"Random\"\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                    Random\r\n                  </label>\r\n                </li>\r\n              </article>\r\n              <article>\r\n                <h3>\r\n                  <p>Timeout?</p>\r\n                </h3>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"timeout\"\r\n                      type=\"radio\"\r\n                      value=\"yes\"\r\n                      onChange={this.handleTimeout}\r\n                    />\r\n                    Yes\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"timeout\"\r\n                      type=\"radio\"\r\n                      value=\"no\"\r\n                      checked={true}\r\n                      onChange={this.handleTimeout}\r\n                    />\r\n                    No\r\n                  </label>\r\n                </li>\r\n              </article>\r\n            </section>\r\n           \r\n            <div className='buttonFlex'>\r\n              <Link to = {`/test/new/${this.state.complexity}/${this.state.timeout}`}>\r\n                <button className=\"trainingsPage-button\">Start Test</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default IqTraining;\r\n","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../stylesheets/iq_resultlist.css';\r\n/* import TestReview from \"./iq_test-review\" */\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass IqResultlist extends Component {\r\n  \r\n  state = {\r\n    results: [],\r\n    /* resultToReview: null */            \r\n    };      \r\n         \r\n    \r\n  componentDidMount() {\r\n      console.log(\"AllResults --> componentDidMount()\")\r\n      axios.get(\"/api/resultlist\")\r\n          .then(response => {\r\n              console.log(\"AllResults --> Promise resolved\")\r\n              console.log(\"Promise resolved Data\", response.data)\r\n              this.setState({ results: response.data })\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Error occured: \", err);\r\n          });\r\n  }\r\n\r\n/* reviewClickHandler =  e => {\r\n  const resultObj \r\n     = this.state.results.filter(r => {return (r._id === e.target.id)}\r\n   )[0];\r\n  this.setState({\r\n   resultToReview: resultObj\r\n });\r\n} */\r\n\r\n  render() {\r\n\r\n    /* if (this.state.resultToReview) {\r\n      return(\r\n        <TestReview resultObj={this.state.resultToReview}/>\r\n      );\r\n    } */\r\n\r\n    \r\n    const resultList = this.state.results.map(result => {\r\n      let caseNumber = result.numberOfCases;\r\n      let score = result.score;\r\n      let resultInPercentage = Math.round(score/caseNumber * 100)\r\n      \r\n      return (\r\n        <div className=\"trResultlist\" key={result._id}>\r\n          <div className=\"tdResultlist\">{result.userName}</div>\r\n          <div className=\"tdResultlist\">{result.testName}</div>\r\n          <div className=\"tdResultlist\">{result.complexity}</div>\r\n          <div className=\"tdResultlist\">{result.elapsedTime}</div>\r\n          <div className=\"tdResultlist\">{result.numberOfCases}</div>\r\n          <div className=\"tdResultlist\">{result.score}</div>\r\n          <div className=\"tdResultlist\">{resultInPercentage} %</div>\r\n          \r\n          <Link to = {`/test/id/${result.testId}`}><button className=\"resultlistPage-button\" id= {result.testId}>Test Again</button></Link>\r\n          \r\n          {/* <<<<<<<<<<<<<<<<<<<<<<<<<<<  New */}\r\n          <Link to = {`/review/id/${result._id}`}><button className=\"resultlistPage-button\" id= {result._id}>Review</button></Link>\r\n\r\n          {/* <button className=\"trainingsPage-button\" id={result._id} onClick={this.reviewClickHandler}>Review</button> */}\r\n        </div>\r\n      )\r\n\r\n    })\r\n      return(\r\n        <div>      \r\n        <div className = \"resultlistPage\">\r\n          <section className= \"table-resultlist\">\r\n            <h1 className=\"header\">Your Test Results</h1>\r\n            <div className=\"tableResultlist-box\">        \r\n              <div className=\"tableResultlist\">\r\n                <div className=\"trResultlist\">\r\n                  <div className=\"thResultlist\">User</div>\r\n                  <div className=\"thResultlist\">Test</div>\r\n                  <div className=\"thResultlist\">Complexity</div>\r\n                  <div className=\"thResultlist\">Elapsed Time</div>\r\n                  <div className=\"thResultlist\">Number of Test Cases</div>\r\n                  <div className=\"thResultlist\">Score</div>\r\n                  <div className=\"thResultlist\">Result</div>\r\n                  <div className=\"thResultlist\"></div>\r\n                </div>                  \r\n               {resultList}      \r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n      )\r\n    }\r\n  }\r\n  \r\n\r\n\r\nexport default IqResultlist;","import React, { Component } from 'react'\r\nimport '../iq_test-style.css';\r\nimport DiagramCanvas from './iq_diagram-canvas.js';\r\nimport {decodePicture} from \"./iq_utils.js\";\r\n\r\n\r\nexport default class FormulaCanvas extends Component {\r\n\r\n  catPic = (catName, hexPic) => {\r\n    //returns hex picture for one category\r\n    const idx = \"ABCDEF\".indexOf(catName.toUpperCase());\r\n        \r\n    //Padding leading zeros to get the hexPic of LENGTH 6!!!\r\n    const padded = \"0000000000\" + hexPic;\r\n    const valid = padded.substr(padded.length - 6);\r\n    let catPicArr = valid.split(\"\").map((c,i) => (i === idx) ? c : \"0\");\r\n    return catPicArr.join(\"\");\r\n  }\r\n\r\n  render() {\r\n\r\n    const catName = this.props.catName;\r\n    const opName = this.props.opName;\r\n    const line = this.props.line;\r\n    const lineNum = this.props.lineNum;\r\n\r\n    return (\r\n      <div className=\"formula-row\">\r\n        <div className=\"formula-cell\"><DiagramCanvas shapes={[\"Left\"]}/></div>\r\n        <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(this.catPic(catName, line.arg1))}/></div>\r\n        \r\n        <div className=\"formula-cell\"><DiagramCanvas \r\n            shapes={(opName === \"NAND\" || opName === \"NOR\") ? [opName.substr(1)] : [opName]}/></div>\r\n        <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(this.catPic(catName, line.arg2))}/></div>\r\n        \r\n        <div className=\"formula-cell\"><DiagramCanvas \r\n            shapes={(opName === \"NAND\" || opName === \"NOR\") ? [\"RightCompl\"] : [\"Right\"]}/></div> \r\n        <div className={(lineNum===3) ? \"answer-cell-ok\" : \"board-cell\"}><DiagramCanvas shapes={decodePicture(this.catPic(catName, line.result))}/></div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../iq_test-style.css';\r\nimport FormulaCanvas from \"./iq_formula-canvas.js\";\r\n\r\nexport default class CaseReview extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.case = this.props.caseObj;\r\n  }\r\n    \r\n  render() {\r\n\r\n    const ops = [\"AND\",\"NAND\",\"OR\",\"NOR\",\"XOR\"];\r\n    const opDesc = [\"Intersection (AND)\", \"Complement of Intersection (NOT AND)\", \"Union (OR)\", \"Complement of Union (NOT OR)\",\"Symmetric Difference (XOR)\"];\r\n\r\n    const listOfComponentsJSX = this.case.catOps.map((c,i) => \r\n        <li key = {c._id} className=\"case-comp\"> \r\n            \r\n            <div className=\"canvas-matrix\">  \r\n              <FormulaCanvas opName={c.opName} catName={c.catName} line={this.case.line1} lineNum = {1}/>\r\n              <FormulaCanvas opName={c.opName} catName={c.catName} line={this.case.line2} lineNum = {2}/>\r\n              <FormulaCanvas opName={c.opName} catName={c.catName} line={this.case.line3} lineNum = {3}/>\r\n            </div>\r\n            <br/>\r\n            <div className=\"op-desc\">{opDesc[ops.indexOf(c.opName)]}</div>       \r\n\r\n        </li>);\r\n\r\n    return (\r\n      <div>\r\n          <ul className=\"case-comp-list\">\r\n             {listOfComponentsJSX}\r\n          </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../iq_test-style.css';\r\nimport DiagramCanvas from './iq_diagram-canvas.js';\r\nimport {decodePicture} from \"./iq_utils.js\";\r\nimport CaseReview from \"./iq_case-review\";\r\nimport axios from 'axios';\r\n\r\nexport default class TestReview extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      test: null,  //Test obj from DB  \r\n      cases: [],  //Array of cases from DB \r\n      isDetailView: []  \r\n    }\r\n  }\r\n    \r\n  compare(answer1, answer2) { \r\n    return (parseInt(answer1,16) === parseInt(answer2,16));\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const resultId = this.props.match.params.resultId;\r\n    \r\n    console.log(\">>>>>>> Result ID from Karin: \", resultId);\r\n\r\n    axios.get(`/api/results/id/${resultId}`)\r\n      .then(resultData => {\r\n        const testId = resultData.data.testId;\r\n        axios.get(`/api/tests/id/${testId}`)\r\n        .then(testDataFromApi => {\r\n          this.setState({\r\n            result: resultData.data,\r\n            test: testDataFromApi.data.testData,\r\n            cases: testDataFromApi.data.arrayOfCases  \r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n/*\r\n\r\n    const testId = this.props.resultObj.testId;\r\n    axios.get(`/api/tests/id/${testId}`)\r\n      .then(resFromApi => {\r\n        this.setState({\r\n          test: resFromApi.data.testData,\r\n          cases: resFromApi.data.arrayOfCases,\r\n          isDetailView: resFromApi.data.arrayOfCases.map (c => false) \r\n        })\r\n      });      \r\n  }\r\n  */\r\n\r\n  lessBtnHandler =  e => {\r\n    console.log(\"LESS button clicked for case \", e.target.id);\r\n    const isDetailViewCopy = [...this.state.isDetailView];\r\n    isDetailViewCopy[e.target.id] = false;\r\n    this.setState ({\r\n      isDetailView: isDetailViewCopy\r\n    })\r\n  }\r\n\r\n  moreBtnHandler =  e => {\r\n    console.log(\"MORE button clicked for case \", e.target.id);\r\n    const isDetailViewCopy = [...this.state.isDetailView];\r\n    isDetailViewCopy[e.target.id] = true;\r\n    this.setState ({\r\n      isDetailView: isDetailViewCopy\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const test = this.state.test;\r\n    const result = this.state.result;\r\n\r\n    \r\n\r\n    if (!test) return (null);  //render nothing if there is no test data\r\n\r\n\r\n    console.log(\">>>>>>RESULT OBJECT\", result);\r\n    console.log(\">>>>>>TEST OBJECT\", test);\r\n\r\n    const listOfCasesJSX = this.state.cases.map((c,i) => \r\n           <li key = {c._id} > \r\n              <h5>Case {i+1}</h5>\r\n              <div className=\"test-rev-row\">\r\n              <div className=\"canvas-matrix\">  \r\n                <div className=\"board-row\">\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line1.arg1)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line1.arg2)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line1.result)}/></div>\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line2.arg1)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line2.arg2)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line2.result)}/></div>\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line3.arg1)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line3.arg2)}/></div>\r\n                    <div className=\"answer-cell-ok\"><DiagramCanvas shapes={decodePicture(c.line3.result)}/></div>\r\n                </div>\r\n\r\n                  {(this.compare(c.line3.result, result.answers[i])) ?\r\n                    <div className=\"answer-row\">  \r\n                      <div>Your answer <br/> is correct</div> \r\n                      <div className=\"answer-cell-ok\"><DiagramCanvas shapes={decodePicture(result.answers[i])}/></div>  \r\n                    </div>                   \r\n                   :\r\n                    <div className=\"answer-row\">  \r\n                      <div>Your answer <br/> is wrong</div> \r\n                      <div className=\"answer-cell-err\"><DiagramCanvas shapes={decodePicture(result.answers[i])}/></div>   \r\n                    </div>            \r\n                  }\r\n\r\n              </div>\r\n              {(this.state.isDetailView[i]) ?\r\n                 <div className=\"case-rev\">\r\n                   <div><button id={i} onClick={this.lessBtnHandler}>less...</button></div>\r\n                   <div><CaseReview caseObj={c} caseIdx={i} answer={c.line3.result}/></div>\r\n                 </div>\r\n                 :\r\n                 <div className=\"case-rev\">\r\n                   <div><button id={i} onClick={this.moreBtnHandler}>more...</button></div>\r\n                 </div>\r\n              }\r\n            </div>\r\n           </li>);\r\n\r\n    return (\r\n      <div>\r\n          <div id=\"header\">\r\n              <div><h4><span>Result for the test </span> <span id=\"test-name\">{test.testName}</span></h4></div>   \r\n          </div>\r\n          <ul>\r\n             {listOfCasesJSX}\r\n          </ul>          \r\n      </div>\r\n    );\r\n  }\r\n}","//import React, { Component } from 'react';\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport IQttyTest from \"./components/iq_test.js\";\r\nimport \"./App.css\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport IqNavbar from \"./components/iq_Navbar\";\r\nimport IqStartpage from \"./components/iq_Startpage\";\r\n/* import Projects from \"./components/Projects\";\r\nimport ProjectDetail from \"./components/ProjectDetail\";\r\nimport TaskDetail from \"./components/TaskDetail\"; */\r\nimport IqSignup from \"./components/iq_Signup\";\r\nimport IqLogin from \"./components/iq_Login\";\r\nimport IqTraining from \"./components/iq_Training\";\r\nimport IqResultlist from \"./components/iq_Resultlist\";\r\nimport Iqresult from \"./components/iq_result\";\r\n/* import IqAdmin from \"./components/iq_admin.js/index.js.js\"; */\r\nimport TestReview from \"./components/iq_test-review\"\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    user: this.props.user\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({\r\n      user: user\r\n    });\r\n  };\r\n\r\n  trainingRoute = props => {\r\n    if (this.state.user) {\r\n      return <IqTraining {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  resultListRoute = props => {\r\n    if (this.state.user) {\r\n      return <IqResultlist {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  resultRoute = props => {\r\n    if (this.state.user) {\r\n      return <Iqresult />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  testNewRoute = props => {\r\n    if (this.state.user) {\r\n      return (\r\n        <IQttyTest {...props} userName={this.state.user.username}/>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <IqNavbar user={this.state.user} setUser={this.setUser} />\r\n        <Switch>\r\n          {/*<Route exact path=\"/test/new\" render={this.testRoute} />*/}\r\n\r\n          <Route \r\n            exact \r\n            path=\"/test/id/:testId\" \r\n            render= {props => <IQttyTest {...props} />}\r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/test/new/:complexity/:timeout\" \r\n            render= {this.testNewRoute}\r\n          />          \r\n          <Route exact path=\"/review/id/:resultId\" render= {\r\n            props => <TestReview {...props} /> } \r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/\" \r\n            component={IqStartpage} \r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/signup\"\r\n            render={props => <IqSignup {...props} setUser={this.setUser} />}\r\n          />\r\n          <Route\r\n            exact \r\n            path=\"/login\" \r\n            render={props => <IqLogin {...props} setUser={this.setUser} />}\r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/training\" \r\n            render={this.trainingRoute}\r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/resultlist\" \r\n            render={this.resultListRoute} \r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/result\" \r\n            render={this.resultRoute} \r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\naxios.get(\"/api/auth/loggedin\").then(response => {\r\n  const user = response.data;\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App user={user} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}