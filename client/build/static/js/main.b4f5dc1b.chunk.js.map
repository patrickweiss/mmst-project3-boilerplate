{"version":3,"sources":["components/iq_utils.js","components/iq_diagram-canvas.js","components/iq_test-case.js","components/iq_result.js","components/iq_test.js","services/auth.js","components/iq_Navbar.js","components/iq_Startpage.js","components/iq_Signup.js","components/iq_Login.js","components/iq_Training.js","components/iq_Resultlist.js","components/iq_formula-canvas.js","components/iq_case-review.js","components/iq_test-review.js","App.js","serviceWorker.js","index.js"],"names":["Diagram","size","ctx","shapes","this","bkgd","color","fillStyle","fillRect","strokeStyle","lineWidth","symbols","id","includes","push","_drawSymbol","splice","indexOf","_clear","_redraw","clearRect","s","_drawA1","_drawA2","_drawA3","_drawA4","_drawB1","_drawB2","_drawB3","_drawB4","_drawC1","_drawC2","_drawC3","_drawC4","_drawD1","_drawD2","_drawD3","_drawD4","_drawE1","_drawE2","_drawE3","_drawE4","_drawF1","_drawF2","_drawF3","_drawF4","_drawLeft","_drawRight","_drawRightCompl","_drawAND","_drawOR","_drawXOR","beginPath","moveTo","lineTo","stroke","r","arc","Math","PI","fill","_strokeStar","a","closePath","x","y","n","inset","save","translate","i","rotate","restore","decodePicture","hexPic","categories","res","padded","valid","substr","length","catName","numCat","parseInt","charAt","shape2","shape3","shape4","DiagramCanvas","props","diagram","refs","canvas","getContext","ref","width","height","Component","TestCase","selectShapeHandler","e","btnShape","currentTarget","newAnswer","state","answer","newBtnStates","btnStates","setState","resetAnswerHandler","btnStatesCopy","key","nextCaseHandler","cat","toString","encodePicture","A1","B1","C1","D1","E1","F1","A2","B2","C2","D2","E2","F2","A3","B3","C3","D3","E3","F3","A4","B4","C4","D4","E4","F4","init","case","className","line1","arg1","arg2","result","line2","line3","onClick","map","c","Iqresult","axios","post","then","fromApi","catch","err","console","log","scores","score","questions","numberOfCases","ergebnis","round","testName","complexity","elapsedTime","to","style","textDecoration","IQttyTest","clearTimeout","caseTimer","currentCaseIdx","animOn","endOfTest","answers","loadTimer","setTimeout","animTimeout","bind","animLimit","cases","testTime","Date","getTime","caseStartTimestamp","answersCopy","currentScore","answerCorrect","finishTest","caseLimit","match","params","timeout","testResult","test","caseTimeout","sysAnswer","userName","toFixed","testId","_id","get","resFromApi","data","testData","arrayOfCases","curTest","src","alt","curCase","signup","username","password","response","login","IqNavbar","bg","fixed","user","delete","setUser","IqStartpage","React","IqSignup","error","handleChange","event","target","name","value","handleSubmit","preventDefault","message","history","Form","onSubmit","Group","Label","htmlFor","Control","type","onChange","Alert","variant","Button","IqLogin","IqTraining","handleComplexity","handleTimeout","checked","IqResultlist","results","resultList","caseNumber","resultInPercentage","d","createdAt","resDate","getFullYear","getMonth","getDate","resTime","getHours","getMinutes","getSeconds","FormulaCanvas","catPic","idx","toUpperCase","split","join","opName","line","lineNum","CaseReview","caseObj","ops","opDesc","listOfComponentsJSX","catOps","TestReview","lessBtnHandler","isDetailViewCopy","isDetailView","moreBtnHandler","answer1","answer2","resultId","resultData","testDataFromApi","listOfCasesJSX","compare","caseIdx","App","trainingRoute","resultListRoute","testNewRoute","testAgainRoute","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6ZAAqBA,E,WACjB,WAAYC,EAAKC,EAAIC,GAAS,oBAC5BC,KAAKH,KAAOA,EACZG,KAAKC,KAAO,QACZD,KAAKE,MAAQ,QACbF,KAAKF,IAAMA,EACXE,KAAKF,IAAIK,UAAYH,KAAKC,KAC1BD,KAAKF,IAAIM,SAAS,EAAE,EAAEP,EAAKA,GAC3BG,KAAKF,IAAIK,UAAYH,KAAKE,MAC1BF,KAAKF,IAAIO,YAAcL,KAAKE,MAC5BF,KAAKF,IAAIQ,UAAY,IACrBN,KAAKO,QAAUR,E,sDAGPS,GACJR,KAAKO,QAAQE,SAASD,KAC1BR,KAAKO,QAAQG,KAAKF,GAClBR,KAAKW,YAAYH,M,mCAGNA,GACNR,KAAKO,QAAQE,SAASD,KAC3BR,KAAKO,QAAQK,OAAOZ,KAAKO,QAAQM,QAAQL,GAAK,GAC9CR,KAAKc,SACLd,KAAKe,a,qCAILf,KAAKO,QAAU,GACfP,KAAKc,W,+BAILd,KAAKF,IAAIkB,UAAU,EAAE,EAAEhB,KAAKH,KAAKG,KAAKH,MACtCG,KAAKF,IAAIK,UAAYH,KAAKC,KAC1BD,KAAKF,IAAIM,SAAS,EAAE,EAAEJ,KAAKH,KAAKG,KAAKH,MACrCG,KAAKF,IAAIK,UAAYH,KAAKE,Q,gCAI1B,IAAIe,EADI,uBAER,YAAUjB,KAAKO,QAAf,+CAAKU,EAAL,QAAwBjB,KAAKW,YAAYM,GAFjC,qF,kCAKET,GACV,OAAQA,GACN,IAAK,KAAMR,KAAKkB,UAAW,MAC3B,IAAK,KAAMlB,KAAKmB,UAAW,MAC3B,IAAK,KAAMnB,KAAKoB,UAAW,MAC3B,IAAK,KAAMpB,KAAKqB,UAAW,MAC3B,IAAK,KAAMrB,KAAKsB,UAAW,MAC3B,IAAK,KAAMtB,KAAKuB,UAAW,MAC3B,IAAK,KAAMvB,KAAKwB,UAAW,MAC3B,IAAK,KAAMxB,KAAKyB,UAAW,MAC3B,IAAK,KAAMzB,KAAK0B,UAAW,MAC3B,IAAK,KAAM1B,KAAK2B,UAAW,MAC3B,IAAK,KAAM3B,KAAK4B,UAAW,MAC3B,IAAK,KAAM5B,KAAK6B,UAAW,MAC3B,IAAK,KAAM7B,KAAK8B,UAAW,MAC3B,IAAK,KAAM9B,KAAK+B,UAAW,MAC3B,IAAK,KAAM/B,KAAKgC,UAAW,MAC3B,IAAK,KAAMhC,KAAKiC,UAAW,MAC3B,IAAK,KAAMjC,KAAKkC,UAAW,MAC3B,IAAK,KAAMlC,KAAKmC,UAAW,MAC3B,IAAK,KAAMnC,KAAKoC,UAAW,MAC3B,IAAK,KAAMpC,KAAKqC,UAAW,MAC3B,IAAK,KAAMrC,KAAKsC,UAAW,MAC3B,IAAK,KAAMtC,KAAKuC,UAAW,MAC3B,IAAK,KAAMvC,KAAKwC,UAAW,MAC3B,IAAK,KAAMxC,KAAKyC,UAAW,MAC3B,IAAK,OAAQzC,KAAK0C,YAAa,MAC/B,IAAK,QAAS1C,KAAK2C,aAAc,MACjC,IAAK,aAAc3C,KAAK4C,kBAAmB,MAC3C,IAAK,MAAO5C,KAAK6C,WAAY,MAC7B,IAAK,KAAM7C,KAAK8C,UAAW,MAC3B,IAAK,MAAO9C,KAAK+C,c,gCAOnB/C,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAG,GAC7BG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAGG,KAAKH,MAClCG,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAO,EAAGjD,KAAKH,KAAK,GAC7BG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAMG,KAAKH,KAAK,GACrCG,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAO,EAAG,GACnBjD,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAMG,KAAKH,MAChCG,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAM,GAC3BG,KAAKF,IAAIoD,OAAO,EAAGlD,KAAKH,MACxBG,KAAKF,IAAIqD,W,gCAKT,IAAMC,EAAIpD,KAAKH,KAAK,EAAI,EACxBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAGuD,EAAG,EAAEE,KAAKC,GAAI,IAAID,KAAKC,IAC9DvD,KAAKF,IAAIqD,W,gCAKT,IAAMC,EAAIpD,KAAKH,KAAK,EAAI,EACxBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAGuD,EAAG,IAAIE,KAAKC,GAAI,GACvDvD,KAAKF,IAAIqD,W,gCAKT,IAAMC,EAAIpD,KAAKH,KAAK,EAAI,EACxBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAGuD,EAAG,GAAIE,KAAKC,GAAI,EAAED,KAAKC,IAC9DvD,KAAKF,IAAIqD,W,gCAKT,IAAMC,EAAIpD,KAAKH,KAAK,EAAI,EACxBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAGuD,EAAG,EAAG,GAAIE,KAAKC,IACtDvD,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAI,EAAE,EAAG,IAAK,EAAG,EAAEC,KAAKC,IACjCvD,KAAKF,IAAI0D,S,gCAKTxD,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAE,EAAG,IAAK,EAAG,EAAEyD,KAAKC,IAC3CvD,KAAKF,IAAI0D,S,gCAKTxD,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAEG,KAAKH,KAAK,EAAG,IAAK,EAAG,EAAEyD,KAAKC,IACrDvD,KAAKF,IAAI0D,S,gCAKTxD,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAI,EAAErD,KAAKH,KAAK,EAAG,IAAK,EAAG,EAAEyD,KAAKC,IAC3CvD,KAAKF,IAAI0D,S,gCAKT,IAAMJ,EAAI,GAAIpD,KAAKH,KACnBG,KAAKyD,YAAYzD,KAAKF,IAAKE,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAGuD,EAAG,EAAG,M,gCAK3D,IAAMA,EAAI,IAAKpD,KAAKH,KACpBG,KAAKyD,YAAYzD,KAAKF,IAAKE,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAGuD,EAAG,EAAG,M,gCAK3D,IAAMA,EAAI,IAAKpD,KAAKH,KACpBG,KAAKyD,YAAYzD,KAAKF,IAAKE,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAGuD,EAAG,EAAG,M,gCAK3D,IAAMM,EAAI1D,KAAKH,KAAO,EACtBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAO,EAAG,GACnBjD,KAAKF,IAAIoD,OAAOQ,EAAE,EAAG,GACrB1D,KAAKF,IAAIoD,OAAOQ,EAAE,EAAGA,EAAE,GACvB1D,KAAKF,IAAIoD,OAAO,EAAGQ,EAAE,GACrB1D,KAAKF,IAAI6D,YACT3D,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAI6D,YACT3D,KAAKF,IAAI0D,OACTxD,KAAKF,IAAIQ,UAAY,EACrBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,GACvCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAIqD,SACTnD,KAAKF,IAAIQ,UAAY,I,gCAKvBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAI6D,YACT3D,KAAKF,IAAI0D,OACTxD,KAAKF,IAAIQ,UAAY,EACrBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,GACvCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAIqD,SACTnD,KAAKF,IAAIQ,UAAY,I,gCAKrBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAI6D,YACT3D,KAAKF,IAAI0D,OACTxD,KAAKF,IAAIQ,UAAY,EACrBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,GACvCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAIqD,SACTnD,KAAKF,IAAIQ,UAAY,I,gCAKrBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,EAAE,GACzCG,KAAKF,IAAI6D,YACT3D,KAAKF,IAAI0D,OACTxD,KAAKF,IAAIQ,UAAY,EACrBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAOjD,KAAKH,KAAK,EAAGG,KAAKH,KAAK,GACvCG,KAAKF,IAAIoD,OAAOlD,KAAKH,KAAK,EAAE,EAAGG,KAAKH,KAAK,GACzCG,KAAKF,IAAIqD,SACTnD,KAAKF,IAAIQ,UAAY,I,gCAKnBN,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAE,EAAG,EAAG,EAAG,EAAEyD,KAAKC,IACzCvD,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAEG,KAAKH,KAAK,EAAG,EAAG,EAAG,EAAEyD,KAAKC,IACnDvD,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAI,EAAErD,KAAKH,KAAK,EAAG,EAAG,EAAG,EAAEyD,KAAKC,IACzCvD,KAAKF,IAAIqD,W,gCAKTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAIrD,KAAKH,KAAK,EAAEG,KAAKH,KAAK,EAAG,EAAG,EAAG,EAAEyD,KAAKC,IACnDvD,KAAKF,IAAIqD,W,kCAGCrD,EAAK8D,EAAGC,EAAGT,EAAGU,EAAGC,GAG7BjE,EAAIkE,OACJlE,EAAIkD,YACJlD,EAAImE,UAAUL,EAAGC,GACjB/D,EAAImD,OAAO,EAAE,EAAEG,GACf,IAAK,IAAIc,EAAI,EAAGA,EAAIJ,EAAGI,IACnBpE,EAAIqE,OAAOb,KAAKC,GAAKO,GACrBhE,EAAIoD,OAAO,EAAG,EAAKE,EAAEW,GACrBjE,EAAIqE,OAAOb,KAAKC,GAAKO,GACrBhE,EAAIoD,OAAO,EAAG,EAAIE,GAEtBtD,EAAI6D,YACJ7D,EAAI0D,OACJ1D,EAAIsE,Y,kCAKF,IAAMhB,EAAI,GAAIpD,KAAKH,KACnBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAI,IAAIrD,KAAKH,KAAMG,KAAKH,KAAK,EAAGuD,EAAG,GAAIE,KAAKC,GAAI,IAAID,KAAKC,IAClEvD,KAAKF,IAAIqD,W,mCAKT,IAAMC,EAAI,GAAIpD,KAAKH,KACnBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,KAAK,GAAIrD,KAAKH,KAAMG,KAAKH,KAAK,EAAGuD,EAAG,IAAIE,KAAKC,GAAI,GAAID,KAAKC,IACnEvD,KAAKF,IAAImD,OAAO,GAAIjD,KAAKH,KAAM,IAAKG,KAAKH,MACzCG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAM,IAAKG,KAAKH,MACzCG,KAAKF,IAAImD,OAAO,GAAIjD,KAAKH,KAAM,IAAKG,KAAKH,MACzCG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAM,IAAKG,KAAKH,MACzCG,KAAKF,IAAIqD,W,wCAKTnD,KAAK2C,aACL,IAAMS,EAAI,IAAKpD,KAAKH,KACpBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAI,GAAIrD,KAAKH,KAAM,IAAKG,KAAKH,KAAMuD,EAAG,GAAIE,KAAKC,GAAI,IAAID,KAAKC,IACrEvD,KAAKF,IAAIqD,W,iCAKT,IAAMC,EAAI,IAAKpD,KAAKH,KACpBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAI,GAAIrD,KAAKH,KAAM,GAAIG,KAAKH,KAAMuD,EAAGE,KAAKC,GAAI,EAAED,KAAKC,IAC9DvD,KAAKF,IAAImD,OAAO,GAAIjD,KAAKH,KAAKuD,EAAG,GAAIpD,KAAKH,MAC1CG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAKuD,EAAG,IAAKpD,KAAKH,MAC3CG,KAAKF,IAAImD,OAAO,GAAIjD,KAAKH,KAAKuD,EAAG,GAAIpD,KAAKH,MAC1CG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAKuD,EAAG,IAAKpD,KAAKH,MAC3CG,KAAKF,IAAIqD,W,gCAKT,IAAMC,EAAI,IAAKpD,KAAKH,KACpBG,KAAKF,IAAIkD,YACThD,KAAKF,IAAIuD,IAAI,GAAIrD,KAAKH,KAAM,GAAIG,KAAKH,KAAMuD,EAAG,EAAGE,KAAKC,IACtDvD,KAAKF,IAAImD,OAAO,GAAIjD,KAAKH,KAAKuD,EAAG,GAAIpD,KAAKH,MAC1CG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAKuD,EAAG,IAAKpD,KAAKH,MAC3CG,KAAKF,IAAImD,OAAO,GAAIjD,KAAKH,KAAKuD,EAAG,GAAIpD,KAAKH,MAC1CG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAKuD,EAAG,IAAKpD,KAAKH,MAC3CG,KAAKF,IAAIqD,W,iCAMTnD,KAAKF,IAAIkD,YACThD,KAAKF,IAAImD,OAAO,GAAIjD,KAAKH,KAAM,IAAKG,KAAKH,MACzCG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAM,IAAKG,KAAKH,MACzCG,KAAKF,IAAIoD,OAAO,GAAIlD,KAAKH,KAAM,IAAKG,KAAKH,MACzCG,KAAKF,IAAI6D,YACT3D,KAAKF,IAAIqD,a,KAKN,SAASkB,EAAcC,GAS5B,IAPA,IAAIC,EAAa,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAClCC,EAAM,GAGNC,EAAS,aAAeH,EACxBI,EAAQD,EAAOE,OAAOF,EAAOG,OAAS,GAEjCV,EAAI,EAAGA,EAAIK,EAAWK,OAAQV,IAAM,CAC3C,IAAIW,EAAUN,EAAWL,GACrBY,EAASC,SAASL,EAAMM,OAAOd,GAAI,IAEnCe,GAAoB,EAATH,IAAe,EAC1BI,GAAoB,EAATJ,IAAe,EAC1BK,EAAoB,EAATL,GAHS,EAATA,IAAe,GAIlBN,EAAI9D,KAAKmE,EAAQ,KACzBI,GAAQT,EAAI9D,KAAKmE,EAAQ,KACzBK,GAAQV,EAAI9D,KAAKmE,EAAQ,KACzBM,GAAQX,EAAI9D,KAAKmE,EAAQ,KAE/B,OAAOL,E,IC5YUY,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDxF,KAAO,GACZ,EAAKyF,QAAU,KAHA,E,iFAQf,IAAMxF,EAAME,KAAKuF,KAAKC,OAAOC,WAAW,MACxCzF,KAAKsF,QAAU,IAAI1F,EAASI,KAAKH,KAAMC,EAAKE,KAAKqF,MAAMtF,QACvDC,KAAKsF,QAAQvE,Y,2CAKbf,KAAKsF,QAAQ/E,QAAUP,KAAKqF,MAAMtF,OAClCC,KAAKsF,QAAQxE,SACbd,KAAKsF,QAAQvE,Y,+BAIb,OACI,6BACI,4BAAQ2E,IAAI,SAASC,MAAO3F,KAAKH,KAAM+F,OAAQ5F,KAAKH,Y,GAzBzBgG,a,6kBCEtBC,E,YAEjB,WAAYT,GAAQ,IAAD,8BACf,4CAAMA,KAYVU,mBAAqB,SAACC,GAClB,IAAMC,EAAWD,EAAEE,cAAc1F,GAC3B2F,EAAS,YAAO,EAAKC,MAAMC,QAC3BC,EAAY,KAAO,EAAKF,MAAMG,WAEL,QAA3BD,EAAaL,GACTE,EAAUtF,QAAQoF,GAAY,IAChCE,EAAUzF,KAAKuF,GACfK,EAAaL,GAAY,KACzB,EAAKO,SAAU,CAACH,OAAQF,EAAWI,UAAWD,KAGhB,OAA3BA,EAAaL,IACdE,EAAUtF,QAAQoF,IAAa,IAC/BE,EAAUvF,OAAOuF,EAAUtF,QAAQoF,GAAW,GAC9CK,EAAaL,GAAY,MACzB,EAAKO,SAAU,CAACH,OAAQF,EAAWI,UAAWD,MA7BvC,EAkCnBG,mBAAqB,WACjB,IAAMC,EAAa,KAAO,EAAKN,MAAMG,WACrC,IAAK,IAAII,KAAOD,EAAeA,EAAcC,GAAO,MACpD,EAAKH,SAAU,CAACH,OAAQ,GAAIE,UAAWG,KArCxB,EAwCnBE,gBAAkB,WACd,EAAKvB,MAAMuB,gBFkWZ,SAAuBrG,GAI1B,IAFA,IAAIgE,EAAa,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAClCC,EAAM,GACDN,EAAI,EAAGA,EAAIK,EAAWK,OAAQV,IAAM,CAC3C,IAAI2C,EAAOtC,EAAWL,GAMtBM,IADY,EAJHjE,EAAQE,SAASoG,EAAI,KAIX,EAHVtG,EAAQE,SAASoG,EAAI,KAGJ,EAFjBtG,EAAQE,SAASoG,EAAI,KACrBtG,EAAQE,SAASoG,EAAI,MACIC,SAAS,IAG7C,OAAOtC,EE/WwBuC,CAAc,EAAKX,MAAMC,SACpD,EAAKI,sBAvCL,EAAKL,MAAQ,CACTC,OAAQ,GACRE,UAAW,CAACS,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MACrDC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MACrDC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MACrDC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,MAAOC,GAAG,QARtD,E,sEA8CT,IAAD,OAECC,EAA4B,OAApBxI,KAAKqF,MAAMoD,KAEzB,OACI,6BAEI,yBAAKjI,GAAI,mBAEL,yBAAKA,GAAG,kBACJ,yBAAKkI,UAAU,iBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKE,MAAMC,SACnG,yBAAKF,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKE,MAAME,SACnG,yBAAKH,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKE,MAAMG,YAEvG,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKM,MAAMH,SACnG,yBAAKF,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKM,MAAMF,SACnG,yBAAKH,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKM,MAAMD,YAEvG,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKO,MAAMJ,SACnG,yBAAKF,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQyI,EAAO,GAAKnE,EAAcrE,KAAKqF,MAAMoD,KAAKO,MAAMH,SACnG,yBAAKH,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQC,KAAKoG,MAAMC,YAGtE,yBAAK7F,GAAG,eACJ,4BAAQkI,UAAWF,EAAO,qBAAsB,UACxCS,QAASjJ,KAAK4G,iBADtB,IACyC4B,EAAO,aAAc,SAD9D,KAEA,4BAAQE,UAAU,UACVO,QAASjJ,KAAKyG,oBADtB,YAMZ,yBAAKiC,UAAU,iBACX,yBAAKA,UAAU,YACV,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKQ,KAAI,SAAAC,GAAC,OAChC,4BAAQT,UAAW,YAAY,EAAKtC,MAAMG,UAAU4C,EAAE,GAC9CxC,IAAKwC,EAAE,EAAG3I,GAAI2I,EAAE,EAAGF,QAAS,EAAKlD,oBACrC,kBAAC,EAAD,CAAehG,OAAQ,CAACoJ,EAAE,UAIlC,yBAAKT,UAAU,YACV,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKQ,KAAI,SAAAC,GAAC,OAChC,4BAAQT,UAAW,YAAY,EAAKtC,MAAMG,UAAU4C,EAAE,GAC9CxC,IAAKwC,EAAE,EAAG3I,GAAI2I,EAAE,EAAGF,QAAS,EAAKlD,oBACrC,kBAAC,EAAD,CAAehG,OAAQ,CAACoJ,EAAE,UAIlC,yBAAKT,UAAU,YACV,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKQ,KAAI,SAAAC,GAAC,OAChC,4BAAQT,UAAW,YAAY,EAAKtC,MAAMG,UAAU4C,EAAE,GAC9CxC,IAAKwC,EAAE,EAAG3I,GAAI2I,EAAE,EAAGF,QAAS,EAAKlD,oBACrC,kBAAC,EAAD,CAAehG,OAAQ,CAACoJ,EAAE,UAIlC,yBAAKT,UAAU,YACV,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKQ,KAAI,SAAAC,GAAC,OAChC,4BAAQT,UAAW,YAAY,EAAKtC,MAAMG,UAAU4C,EAAE,GAC9CxC,IAAKwC,EAAE,EAAG3I,GAAI2I,EAAE,EAAGF,QAAS,EAAKlD,oBACrC,kBAAC,EAAD,CAAehG,OAAQ,CAACoJ,EAAE,gB,GAjHhBtD,a,iCCAjBuD,E,YAEnB,WAAY/D,GAAQ,IAAD,8BACjB,4CAAMA,KACDyD,OAAS,EAAKzD,MAAMyD,OAFR,E,iFAQjBO,IACCC,KAAK,eAAgBtJ,KAAK8I,QAC1BS,MAAK,SAACC,OAGNC,OAAM,SAAAC,GACLC,QAAQC,IAAI,wCAAyCF,Q,+EAUvD,IAAMG,EAAS7J,KAAK8I,OAAOgB,MACrBC,EAAY/J,KAAK8I,OAAOkB,cACxBC,EAAY3G,KAAK4G,MAAOL,EAASE,EAAa,KAAMjD,WAE1D,OAEE,yBAAK4B,UAAU,cACb,yBAAKA,UAAU,gBACb,4DAKF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAAf,eACA,yBAAKA,UAAU,YAAY1I,KAAK8I,OAAOqB,WAEzC,yBAAKzB,UAAU,YACb,yBAAKA,UAAU,YAAf,gBACA,yBAAKA,UAAU,YAAY1I,KAAK8I,OAAOsB,aAEzC,yBAAK1B,UAAU,aACb,yBAAKA,UAAU,YAAf,oBACA,yBAAKA,UAAU,YAAY1I,KAAK8I,OAAOkB,gBAEzC,yBAAKtB,UAAU,YACb,yBAAKA,UAAU,YAAf,kBACA,yBAAKA,UAAU,YAAY1I,KAAK8I,OAAOuB,YAAvC,aAGF,yBAAK3B,UAAU,aACb,yBAAKA,UAAU,YAAf,gBACA,yBAAKA,UAAU,YAAY1I,KAAK8I,OAAOgB,QAGzC,yBAAKpB,UAAU,YACb,yBAAKA,UAAU,YAAf,gBACA,yBAAKA,UAAU,YAAYuB,EAA3B,QAGJ,yBAAKvB,UAAU,aAEf,kBAAC,IAAD,CAAM4B,GAAG,cAAcC,MAAO,CAACrK,MAAM,QAASsK,eAAe,SACzD,4BAAQ9B,UAAU,WAAlB,qB,GAtE0B7C,aCCjB4E,E,YACnB,WAAYpF,GAAQ,IAAD,8BACjB,4CAAMA,KAsBRuB,gBAAkB,SAAAP,GAGhB,GAFAqE,aAAa,EAAKC,YAEiB,IAA/B,EAAKvE,MAAMwE,eASb,OAPA,EAAKpE,SAAS,CACZoE,eAAgB,EAAKxE,MAAMwE,eAAiB,EAC5CC,QAAQ,EACRC,WAAW,EACXC,QAAS,UAEX,EAAKC,UAAYC,WAAW,EAAKC,YAAYC,KAAjB,gBAA6B,EAAKC,YAIhE,GAAI,EAAKhF,MAAMwE,iBAAmB,EAAKxE,MAAMiF,MAAMzG,OAAS,EAAG,CAG7D,EAAK0G,SACH,EAAKA,WAAY,IAAIC,MAAOC,UAAY,EAAKC,oBAE/C,IAAMC,EAAW,YAAO,EAAKtF,MAAM2E,SAWnC,OAVAW,EAAYhL,KAAK2F,GAEjB,EAAKsF,aAAe,EAAKC,cAAcvF,GACnC,EAAKsF,aAAe,EACpB,EAAKA,aAET,EAAKE,WAAWH,QAEhB,EAAKlF,SAAS,CAACuE,QAASW,EAAab,QAAQ,EAAOC,WAAW,IAKjE,EAAKQ,SACH,EAAKA,WAAY,IAAIC,MAAOC,UAAY,EAAKC,oBAG/C,EAAKE,aAAe,EAAKC,cAAcvF,GACnC,EAAKsF,aAAe,EACpB,EAAKA,aAET,IAAMD,EAAW,YAAO,EAAKtF,MAAM2E,SACnCW,EAAYhL,KAAK2F,GACjB,EAAKG,SAAS,CACZoE,eAAgB,EAAKxE,MAAMwE,eAAiB,EAC5CC,QAAQ,EACRC,WAAW,EACXC,QAASW,IAGX,EAAKV,UAAYC,WAAW,EAAKC,YAAYC,KAAjB,gBAA6B,EAAKC,YAxE9D,EAAKK,mBAAqB,EAC1B,EAAKH,SAAW,EAChB,EAAKQ,UAC+B,QAApC,EAAKzG,MAAM0G,MAAMC,OAAOC,QAAoB,IAAY,KACxD,EAAKb,UAAY,IACjB,EAAKT,UAAY,EACjB,EAAKK,UAAY,EACjB,EAAKW,aAAe,EACpB,EAAKO,WAAa,KAElB,EAAK9F,MAAQ,CACX+F,KAAM,KACNd,MAAO,KACPT,gBAAiB,EACjBG,QAAS,GACTD,WAAW,EACXD,QAAQ,GAnBO,E,2EA+EjB7K,KAAKyL,oBAAqB,IAAIF,MAAOC,UACrCxL,KAAKwG,SAAS,CAAEqE,QAAQ,IACxB7K,KAAK2K,UAAYM,WAAWjL,KAAKoM,YAAYjB,KAAKnL,MAAOA,KAAK8L,a,oCAI9D9L,KAAK4G,gBAAgB,Y,oCAGTP,GACZ,IAAMgG,EAAYrM,KAAKoG,MAAMiF,MAAMrL,KAAKoG,MAAMwE,gBAAgB5B,MAAMF,OAGpE,OAFgB/D,SAASsB,EAAQ,MAAQtB,SAASsH,EAAW,M,iCAKpDtB,GAET/K,KAAKkM,WAAa,CAChBI,SAAUtM,KAAKqF,MAAMiH,SACrBnC,SAAUnK,KAAKoG,MAAM+F,KAAKhC,SAC1BC,WAAYpK,KAAKoG,MAAM+F,KAAK/B,WAC5BC,aAAcrK,KAAKsL,SAAW,KAAMiB,QAAQ,GAC5CvC,cAAehK,KAAKoG,MAAM+F,KAAKd,MAAMzG,OACrCkF,MAAO9J,KAAK2L,aACZZ,QAASA,EACTyB,OAAQxM,KAAKoG,MAAM+F,KAAKM,O,0CAKP,IAAD,OACdzM,KAAKqF,MAAM0G,MAAMC,OAAO5B,WAC1Bf,IACGqD,IADH,gCACgC1M,KAAKqF,MAAM0G,MAAMC,OAAO5B,aACrDb,MAAK,SAAAoD,GACJ,EAAKnG,SAAS,CACZ2F,KAAMQ,EAAWC,KAAKC,SACtBxB,MAAOsB,EAAWC,KAAKE,kBAI7BzD,IACGqD,IADH,wBACwB1M,KAAKqF,MAAM0G,MAAMC,OAAOQ,SAC7CjD,MAAK,SAAAoD,GACJ,EAAKnG,SAAS,CACZ2F,KAAMQ,EAAWC,KAAKC,SACtBxB,MAAOsB,EAAWC,KAAKE,oB,6CAM/BpC,aAAa1K,KAAK2K,WAClBD,aAAa1K,KAAKgL,a,+BAKlB,GAAIhL,KAAKoG,MAAM0E,UACb,OACE,6BACE,kBAAC,EAAD,CAAUhC,OAAQ9I,KAAKkM,cAIxB,GAAIlM,KAAKoG,MAAMyE,OAAQ,CAE1B,IAAMkC,EAAU/M,KAAKoG,MAAM+F,KAC3B,OACE,6BACE,yBAAK3L,GAAG,UACN,6BACE,4BACE,wCAAoB,IACpB,0BAAMA,GAAG,aAAauM,EAAQ5C,YAGlC,6BACE,4BACE,8CACA,0BAAM3J,GAAG,cAAcuM,EAAQ3C,cAGnC,6BACE,wBAAI5J,GAAG,gBAAP,SACSR,KAAKoG,MAAMwE,eAAiB,EADrC,KAC0C,IACvC5K,KAAKoG,MAAMiF,MAAMzG,UAKxB,6BACE,yBAAKoI,IAAI,aAAaC,IAAI,GAAGtH,MAAM,UAIpC,IAAmC,IAA/B3F,KAAKoG,MAAMwE,eACpB,OACE,6BACE,yBAAKlC,UAAU,iBACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAUD,KAAM,KAAM7B,gBAAiB5G,KAAK4G,mBAE9C,yBAAK8B,UAAU,iBAAf,iCAEE,6BAFF,uEAKE,6BAAM,6BALR,0CAMyC,4CAAwB,IANjE,gBAOe,6BAPf,8EAUE,6BAVF,wEAYO,6BAZP,yEAeE,6BAAM,6BAfR,OAgBM,8CAhBN,yDAkBE,6BAAM,6BAlBR,OAmBM,4CAnBN,oEAyBD,GAAkC,IAA9B1I,KAAKoG,MAAMwE,eAAsB,CAC1C,IAAMmC,EAAU/M,KAAKoG,MAAM+F,KACrBe,EAAUlN,KAAKoG,MAAMiF,MAAMrL,KAAKoG,MAAMwE,gBAC5C,OAEE,6BACE,yBAAKpK,GAAG,UACN,6BACE,4BACE,wCAAoB,IACpB,0BAAMA,GAAG,aAAauM,EAAQ5C,YAGlC,6BACE,4BACE,8CACA,0BAAM3J,GAAG,cAAcuM,EAAQ3C,cAGnC,6BACE,wBAAI5J,GAAG,gBAAP,SACSR,KAAKoG,MAAMwE,eAAiB,EADrC,KAC0C,IACvC5K,KAAKoG,MAAMiF,MAAMzG,UAKxB,yBAAK8D,UAAU,kBACf,yBAAKA,UAAU,kBACV,kBAAC,EAAD,CAAUD,KAAMyE,EAAStG,gBAAiB5G,KAAK4G,mBAGlD,yBAAK8B,UAAU,gBAAf,iCAEE,6BAFF,6CAIE,6BAAM,6BAJR,4DAME,6BANF,SAOQ,gDAPR,uEAQ4B,6BAR5B,8DAUE,6BAAM,6BAVR,sFAaE,6BAAM,6BAbR,mKAiBE,gCASR,IAAMqE,EAAU/M,KAAKoG,MAAM+F,KACrBe,EAAUlN,KAAKoG,MAAMiF,MAAMrL,KAAKoG,MAAMwE,gBAC5C,OAEE,yBAAKlC,UAAU,wBACb,yBAAKlI,GAAG,UACN,6BACE,4BACE,wCAAoB,IACpB,0BAAMA,GAAG,aAAauM,EAAQ5C,YAGlC,6BACE,4BACE,8CACA,0BAAM3J,GAAG,cAAcuM,EAAQ3C,cAGnC,6BACE,wBAAI5J,GAAG,gBAAP,SACSR,KAAKoG,MAAMwE,eAAiB,EADrC,KAC0C,IACvC5K,KAAKoG,MAAMiF,MAAMzG,UAKxB,yBAAK8D,UAAU,kBACf,yBAAKA,UAAU,kBACV,kBAAC,EAAD,CAAUD,KAAMyE,EAAStG,gBAAiB5G,KAAK4G,yB,GAvSvBf,a,gBCJjCsH,EAAS,SAACC,EAAUC,GACxB,OAAOhE,IACJC,KAAK,mBAAoB,CACxB8D,SAAUA,EACVC,SAAUA,IAEX9D,MAAK,SAAA+D,GACJ,OAAOA,EAASV,QAEjBnD,OAAM,SAAAC,GACL,OAAOA,EAAI4D,SAASV,SAIpBW,EAAQ,SAACH,EAAUC,GACvB,OAAOhE,IACJC,KAAK,kBAAmB,CACvB8D,SAAUA,EACVC,SAAUA,IAEX9D,MAAK,SAAA+D,GACJ,OAAOA,EAASV,QAEjBnD,OAAM,SAAAC,GACL,OAAOA,EAAI4D,SAASV,SCQXY,EA7BE,SAAAnI,GAQf,OACE,kBAAC,IAAD,CAAKqD,UAAU,0BAA0B+E,GAAG,UAAUC,MAAM,OACzDrI,EAAMsI,KACL,6BACE,kBAAC,IAAD,CAAMrD,GAAG,KAAT,WAAsBjF,EAAMsI,KAAKP,UACjC,kBAAC,IAAD,CAAM9C,GAAG,aAAT,YAEA,kBAAC,IAAD,CAAMA,GAAG,eAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,IAAIrB,QAfA,WDyBrBI,IAAMuE,OAAO,oBCrBXvI,EAAMwI,QAAQ,QAWR,WAGF,6BACE,kBAAC,IAAD,CAAMvD,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,YCRKwD,G,uLAZX,OACE,6BAASpF,UAAU,sBACjB,6BACE,qCACA,6EACA,0E,GATgBqF,IAAMlI,Y,wBCoEjBmI,E,2MAlEb5H,MAAQ,CACNgH,SAAU,GACVC,SAAU,GACVY,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAK3H,SAAL,eACG2H,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,S,EAItCC,aAAe,SAAAJ,GACbA,EAAMK,iBACNrB,EAAO,EAAK/G,MAAMgH,SAAU,EAAKhH,MAAMiH,UAAU9D,MAAK,SAAAqD,GAChDA,EAAK6B,QAEP,EAAKjI,SAAS,CACZyH,MAAOrB,EAAK6B,WAKd,EAAKpJ,MAAMwI,QAAQjB,GAEnB,EAAKvH,MAAMqJ,QAAQhO,KAAK,kB,wEAO5B,OADAiJ,QAAQC,IAAI5J,KAAKqF,OAEf,6BACE,wBAAIqD,UAAY,uBAAhB,UACA,kBAACiG,EAAA,EAAD,CAAMC,SAAU5O,KAAKuO,cACnB,kBAACI,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,eACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLZ,KAAK,WACL7N,GAAG,WACH8N,MAAOtO,KAAKoG,MAAMgH,SAClB8B,SAAUlP,KAAKkO,gBAGnB,kBAACS,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,iCACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLZ,KAAK,WACL7N,GAAG,WACH8N,MAAOtO,KAAKoG,MAAMiH,SAClB6B,SAAUlP,KAAKkO,gBAGlBlO,KAAKoG,MAAM6H,OACV,kBAACkB,EAAA,EAAD,CAAOC,QAAQ,UAAUpP,KAAKoG,MAAM6H,OAEtC,kBAACoB,EAAA,EAAD,CAAQJ,KAAK,UAAb,iB,GA5DapJ,aCmERyJ,E,2MAlEblJ,MAAQ,CACNgH,SAAU,GACVC,SAAU,GACVY,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAK3H,SAAL,eACG2H,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,S,EAItCC,aAAe,SAAAJ,GACbA,EAAMK,iBAENjB,EAAM,EAAKnH,MAAMgH,SAAU,EAAKhH,MAAMiH,UAAU9D,MAAK,SAAAqD,GAC/CA,EAAK6B,QAEP,EAAKjI,SAAS,CACZyH,MAAOrB,EAAK6B,WAKd,EAAKpJ,MAAMwI,QAAQjB,GAEnB,EAAKvH,MAAMqJ,QAAQhO,KAAK,kB,wEAM5B,OACE,6BACE,wBAAIgI,UAAY,uBAAhB,SACA,kBAACiG,EAAA,EAAD,CAAMC,SAAU5O,KAAKuO,cACnB,kBAACI,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,eACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLZ,KAAK,WACL7N,GAAG,WACH8N,MAAOtO,KAAKoG,MAAMgH,SAClB8B,SAAUlP,KAAKkO,gBAGnB,kBAACS,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLZ,KAAK,WACL7N,GAAG,WACH8N,MAAOtO,KAAKoG,MAAMiH,SAClB6B,SAAUlP,KAAKkO,gBAGlBlO,KAAKoG,MAAM6H,OACV,kBAACkB,EAAA,EAAD,CAAOC,QAAQ,UAAUpP,KAAKoG,MAAM6H,OAEtC,kBAACoB,EAAA,EAAD,CAAQJ,KAAK,UAAb,gB,GA5DYpJ,aCkIP0J,G,kBAhIb,WAAYlK,GAAQ,IAAD,8BACjB,4CAAMA,KAEDe,MAAQ,CACXgE,WAAY,MACZ6B,QAAS,MAGX,EAAKuD,iBAAmB,EAAKA,iBAAiBrE,KAAtB,gBACxB,EAAKsE,cAAgB,EAAKA,cAActE,KAAnB,gBATJ,E,8EAYFgD,GACfnO,KAAKwG,SAAS,CACZ4D,WAAY+D,EAAMC,OAAOE,U,oCAIfH,GACZnO,KAAKwG,SAAS,CACZyF,QAASkC,EAAMC,OAAOE,U,+BAMtB,OACE,6BAAS5F,UAAU,2BACjB,yBAAKA,UAAU,sBACb,yDADF,yDAE0D,6BAF1D,sCAGuC,6BAHvC,qDAIsD,6BAJtD,2DAK4D,6BAL5D,6CAM8C,6BAN9C,+CAOgD,6BAE9C,6BAASlI,GAAG,aACV,iCACE,mDACA,4BACE,+BACE,2BACE6N,KAAK,aACLY,KAAK,QACLX,MAAM,MACNoB,SAAS,EACTR,SAAUlP,KAAKwP,mBANnB,YAYF,4BACE,+BACE,2BACEnB,KAAK,aACLY,KAAK,QACLX,MAAM,SACNY,SAAUlP,KAAKwP,mBALnB,eAWF,4BACE,+BACE,2BACEnB,KAAK,aACLY,KAAK,QACLX,MAAM,OACNY,SAAUlP,KAAKwP,mBALnB,cAWF,4BACE,+BACE,2BACEnB,KAAK,aACLY,KAAK,QACLX,MAAM,SACNY,SAAUlP,KAAKwP,mBALnB,iBAWJ,iCACE,4CAEA,4BACE,+BACE,2BACEnB,KAAK,UACLY,KAAK,QACLX,MAAM,MACNY,SAAUlP,KAAKyP,gBALnB,mCAUF,4BACE,+BACE,2BACEpB,KAAK,UACLY,KAAK,QACLX,MAAM,KACNoB,SAAS,EACTR,SAAUlP,KAAKyP,gBANnB,cAcR,yBAAK/G,UAAY,oBACb,kBAAC,IAAD,CAAM4B,GAAE,oBAAiBtK,KAAKoG,MAAMgE,WAA5B,YAA0CpK,KAAKoG,MAAM6F,UAC3D,4BAAQvD,UAAU,wBAAlB,qB,GAzHS7C,cC6EV8J,G,iNA1EbvJ,MAAQ,CACNwJ,QAAS,I,mFAGU,IAAD,OAEhBvG,IAAMqD,IAAI,mBACLnD,MAAK,SAAA+D,GAGF,EAAK9G,SAAS,CAAEoJ,QAAStC,EAASV,UAErCnD,OAAM,SAAAC,GACLC,QAAQC,IAAI,kBAAmBF,Q,+BAMvC,IAAMmG,EAAa7P,KAAKoG,MAAMwJ,QAAQ1G,KAAI,SAAAJ,GACxC,IAAIgH,EAAahH,EAAOkB,cACpBF,EAAQhB,EAAOgB,MACfiG,EAAqBzM,KAAK4G,MAAMJ,EAAMgG,EAAa,KACnDE,EAAI,IAAIzE,KAAKzC,EAAOmH,WACpBC,EAAUF,EAAEG,cAAgB,KAAO,EAAEH,EAAEI,YAAc,IAAMJ,EAAEK,UAC7DC,EAAUN,EAAEO,WAAa,IAAMP,EAAEQ,aAAe,IAAMR,EAAES,aAE5D,OACE,yBAAK/H,UAAU,eAAe/B,IAAKmC,EAAO2D,KACxC,yBAAK/D,UAAU,gBAAgBwH,EAA/B,IAAyCI,GACzC,yBAAK5H,UAAU,gBAAgBI,EAAOqB,UACtC,yBAAKzB,UAAU,gBAAgBI,EAAOsB,YACtC,yBAAK1B,UAAU,gBAAgBI,EAAOkB,eACtC,yBAAKtB,UAAU,gBAAgBI,EAAOuB,YAAtC,QACA,yBAAK3B,UAAU,gBAAgBI,EAAOgB,OACtC,yBAAKpB,UAAU,gBAAgBqH,EAA/B,MAEA,kBAAC,IAAD,CAAMzF,GAAE,mBAAgBxB,EAAO0D,SAAU,4BAAQ9D,UAAU,wBAAwBlI,GAAKsI,EAAO0D,QAAtD,eACzC,kBAAC,IAAD,CAAMlC,GAAE,qBAAkBxB,EAAO2D,MAAO,4BAAQ/D,UAAU,wBAAwBlI,GAAKsI,EAAO2D,KAAtD,eAM5C,OACE,6BACA,yBAAK/D,UAAY,kBACf,6BAASA,UAAW,oBAClB,wBAAIA,UAAU,UAAd,qBACA,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,gBAAf,UACA,yBAAKA,UAAU,gBAAf,QACA,yBAAKA,UAAU,gBAAf,cACA,yBAAKA,UAAU,gBAAf,aACA,yBAAKA,UAAU,gBAAf,gBACA,yBAAKA,UAAU,gBAAf,SACA,yBAAKA,UAAU,gBAAf,UACA,yBAAKA,UAAU,kBAEjBmH,W,GA/DWhK,cCAN6K,E,2MAEnBC,OAAS,SAAC9L,EAASP,GAEjB,IAAMsM,EAAM,SAAS/P,QAAQgE,EAAQgM,eAG/BpM,EAAS,aAAeH,EAG9B,OAFcG,EAAOE,OAAOF,EAAOG,OAAS,GACtBkM,MAAM,IAAI5H,KAAI,SAACC,EAAEjF,GAAH,OAAUA,IAAM0M,EAAOzH,EAAI,OAC9C4H,KAAK,K,wEAKtB,IAAMlM,EAAU7E,KAAKqF,MAAMR,QACrBmM,EAAShR,KAAKqF,MAAM2L,OACpBC,EAAOjR,KAAKqF,MAAM4L,KAClBC,EAAUlR,KAAKqF,MAAM6L,QAE3B,OACE,yBAAKxI,UAAU,eACb,yBAAKA,UAAU,gBAAe,kBAAC,EAAD,CAAe3I,OAAQ,CAAC,WACtD,yBAAK2I,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAcrE,KAAK2Q,OAAO9L,EAASoM,EAAKrI,UAE3F,yBAAKF,UAAU,gBAAe,kBAAC,EAAD,CAC1B3I,OAAoB,SAAXiR,GAAgC,QAAXA,EAAoB,CAACA,EAAOrM,OAAO,IAAM,CAACqM,MAC5E,yBAAKtI,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAcrE,KAAK2Q,OAAO9L,EAASoM,EAAKpI,UAE3F,yBAAKH,UAAU,gBAAe,kBAAC,EAAD,CAC1B3I,OAAoB,SAAXiR,GAAgC,QAAXA,EAAoB,CAAC,cAAgB,CAAC,YACxE,yBAAKtI,UAAsB,IAAVwI,EAAe,iBAAmB,cAAc,kBAAC,EAAD,CAAenR,OAAQsE,EAAcrE,KAAK2Q,OAAO9L,EAASoM,EAAKnI,iB,GA/B7FjD,aCFtBsL,E,YAEnB,WAAY9L,GAAQ,IAAD,8BACjB,4CAAMA,KACDoD,KAAO,EAAKpD,MAAM+L,QAFN,E,sEAKT,IAAD,OAEDC,EAAM,CAAC,MAAM,OAAO,KAAK,MAAM,OAC/BC,EAAS,CAAC,qBAAsB,uCAAwC,aAAc,+BAA+B,8BAErHC,EAAsBvR,KAAKyI,KAAK+I,OAAOtI,KAAI,SAACC,EAAEjF,GAAH,OAC7C,wBAAIyC,IAAOwC,EAAEsD,IAAK/D,UAAU,aAExB,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAesI,OAAQ7H,EAAE6H,OAAQnM,QAASsE,EAAEtE,QAASoM,KAAM,EAAKxI,KAAKE,MAAOuI,QAAW,IACvF,kBAAC,EAAD,CAAeF,OAAQ7H,EAAE6H,OAAQnM,QAASsE,EAAEtE,QAASoM,KAAM,EAAKxI,KAAKM,MAAOmI,QAAW,IACvF,kBAAC,EAAD,CAAeF,OAAQ7H,EAAE6H,OAAQnM,QAASsE,EAAEtE,QAASoM,KAAM,EAAKxI,KAAKO,MAAOkI,QAAW,KAEzF,6BACA,yBAAKxI,UAAU,WAAW4I,EAAOD,EAAIxQ,QAAQsI,EAAE6H,cAIvD,OACE,6BACI,wBAAItI,UAAU,kBACV6I,Q,GA5B0B1L,aCGnB4L,E,YAEnB,WAAYpM,GAAQ,IAAD,8BACjB,4CAAMA,KAkCRqM,eAAkB,SAAA1L,GAChB,IAAM2L,EAAgB,YAAO,EAAKvL,MAAMwL,cACxCD,EAAiB3L,EAAEoI,OAAO5N,KAAM,EAChC,EAAKgG,SAAU,CACboL,aAAcD,KAvCC,EA2CnBE,eAAkB,SAAA7L,GAChB,IAAM2L,EAAgB,YAAO,EAAKvL,MAAMwL,cACxCD,EAAiB3L,EAAEoI,OAAO5N,KAAM,EAChC,EAAKgG,SAAU,CACboL,aAAcD,KA5ChB,EAAKvL,MAAQ,CACX+F,KAAM,KACNd,MAAO,GACPvC,OAAQ,KACR8I,aAAc,EAAC,IAPA,E,qEAWXE,EAASC,GACf,OAAQhN,SAAS+M,EAAQ,MAAQ/M,SAASgN,EAAQ,M,0CAG/B,IAAD,OAEZC,EAAWhS,KAAKqF,MAAM0G,MAAMC,OAAOgG,SAIzC3I,IAAMqD,IAAN,0BAA6BsF,IAC1BzI,MAAK,SAAA0I,GACJ,IAAMzF,EAASyF,EAAWrF,KAAKJ,OAC/BnD,IAAMqD,IAAN,wBAA2BF,IAC1BjD,MAAK,SAAA2I,GACJ,EAAK1L,SAAS,CACZsC,OAAQmJ,EAAWrF,KACnBT,KAAM+F,EAAgBtF,KAAKC,SAC3BxB,MAAO6G,EAAgBtF,KAAKE,uB,+BAuB5B,IAAD,OACDX,EAAOnM,KAAKoG,MAAM+F,KAClBrD,EAAS9I,KAAKoG,MAAM0C,OAE1B,IAAKqD,EAAM,OAAQ,KAEnB,IAAM6D,EAAI,IAAIzE,KAAKzC,EAAOmH,WACpBC,EAAUF,EAAEK,UAAY,KAAO,EAAEL,EAAEI,YAAc,IAAMJ,EAAEG,cACzDG,EAAUN,EAAEO,WAAa,IAAMP,EAAEQ,aAAe,IAAMR,EAAES,aAKxD0B,EAAiBnS,KAAKoG,MAAMiF,MAAMnC,KAAI,SAACC,EAAEjF,GAAH,OACrC,wBAAIyC,IAAOwC,EAAEsD,KACV,4BAAI,mCAASvI,EAAE,IACf,yBAAKwE,UAAU,gBACf,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAER,MAAMC,SACzE,yBAAKF,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAER,MAAME,SACzE,yBAAKH,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAER,MAAMG,YAE7E,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAEJ,MAAMH,SACzE,yBAAKF,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAEJ,MAAMF,SACzE,yBAAKH,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAEJ,MAAMD,YAE7E,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAEH,MAAMJ,SACzE,yBAAKF,UAAU,cAAa,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAEH,MAAMH,SACzE,yBAAKH,UAAU,kBAAiB,kBAAC,EAAD,CAAe3I,OAAQsE,EAAc8E,EAAEH,MAAMF,YAG7E,EAAKsJ,QAAQjJ,EAAEH,MAAMF,OAAQA,EAAOiC,QAAQ7G,IAC5C,yBAAKwE,UAAU,cACb,6BAAK,0CAAe,6BAAf,gBACL,yBAAKA,UAAU,kBAAiB,kBAAC,EAAD,CAAe3I,OAAQsE,EAAcyE,EAAOiC,QAAQ7G,QAGtF,yBAAKwE,UAAU,cACb,6BAAK,0CAAe,6BAAf,cACL,yBAAKA,UAAU,mBAAkB,kBAAC,EAAD,CAAe3I,OAAQsE,EAAcyE,EAAOiC,QAAQ7G,SAK3F,EAAKkC,MAAMwL,aAAa1N,GACvB,yBAAKwE,UAAU,YACb,6BAAK,4BAAQlI,GAAI0D,EAAGwE,UAAU,gBAAgBO,QAAS,EAAKyI,gBAAvD,YACL,6BAAK,kBAAC,EAAD,CAAYN,QAASjI,EAAGkJ,QAASnO,EAAGmC,OAAQ8C,EAAEH,MAAMF,WAG3D,yBAAKJ,UAAU,YACb,6BAAK,4BAAQlI,GAAI0D,EAAGwE,UAAU,gBAAgBO,QAAS,EAAK4I,gBAAvD,kBAMpB,OACE,6BACI,yBAAKrR,GAAG,UACN,6BAAK,wBAAIA,GAAG,aAAP,kBAAkC,mCAAS2L,EAAKhC,UAAhD,OAAkE+F,EAAlE,OAA+EI,IACpF,8BAEF,4BACI6B,Q,GAzH0BtM,aCOnByM,E,2MACnBlM,MAAQ,CACNuH,KAAM,EAAKtI,MAAMsI,M,EAGnBE,QAAU,SAAAF,GACR,EAAKnH,SAAS,CACZmH,KAAMA,K,EAIV4E,cAAgB,SAAAlN,GACd,OAAI,EAAKe,MAAMuH,KACN,kBAAC,EAAetI,GAEhB,kBAAC,IAAD,CAAUiF,GAAG,O,EAIxBkI,gBAAkB,SAAAnN,GAChB,OAAI,EAAKe,MAAMuH,KACN,kBAAC,EAAiBtI,GAElB,kBAAC,IAAD,CAAUiF,GAAG,O,EAIxBmI,aAAe,SAAApN,GACb,OAAI,EAAKe,MAAMuH,KAEX,kBAAC,EAAD,iBAAetI,EAAf,CAAsBiH,SAAU,EAAKlG,MAAMuH,KAAKP,YAG3C,kBAAC,IAAD,CAAU9C,GAAG,O,EAIxBoI,eAAiB,SAAArN,GACf,OAAI,EAAKe,MAAMuH,KAEX,kBAAC,EAAD,iBAAetI,EAAf,CAAsBiH,SAAU,EAAKlG,MAAMuH,KAAKP,YAG3C,kBAAC,IAAD,CAAU9C,GAAG,O,wEAId,IAAD,OAEP,OACE,yBAAK5B,UAAU,OACb,kBAAC,EAAD,CAAUiF,KAAM3N,KAAKoG,MAAMuH,KAAME,QAAS7N,KAAK6N,UAC/C,kBAAC,IAAD,KAEE,kBAAC,IAAD,CACE8E,OAAK,EACLC,KAAK,mBACLC,OAAS7S,KAAK0S,iBAEhB,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,iCACLC,OAAS7S,KAAKyS,eAEhB,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,uBAAuBC,OACvC,SAAAxN,GAAK,OAAI,kBAAC,EAAeA,MAE3B,kBAAC,IAAD,CACEsN,OAAK,EACLC,KAAK,IACLE,UAAWhF,IAEb,kBAAC,IAAD,CACE6E,OAAK,EACLC,KAAK,UACLC,OAAQ,SAAAxN,GAAK,OAAI,kBAAC,EAAD,iBAAcA,EAAd,CAAqBwI,QAAS,EAAKA,cAEtD,kBAAC,IAAD,CACE8E,OAAK,EACLC,KAAK,SACLC,OAAQ,SAAAxN,GAAK,OAAI,kBAAC,EAAD,iBAAaA,EAAb,CAAoBwI,QAAS,EAAKA,cAErD,kBAAC,IAAD,CACE8E,OAAK,EACLC,KAAK,YACLC,OAAQ7S,KAAKuS,gBAEf,kBAAC,IAAD,CACEI,OAAK,EACLC,KAAK,cACLC,OAAQ7S,KAAKwS,wB,GA1FQzE,IAAMlI,WCFnBkN,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnH,MACvB,2DCTN1C,IAAMqD,IAAI,sBAAsBnD,MAAK,SAAA+D,GACnC,IAAMK,EAAOL,EAASV,KACtBuG,IAASN,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAKlF,KAAMA,KAEbyF,SAASC,eAAe,YDkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjK,MAAK,SAAAkK,GACjCA,EAAaC,kB","file":"static/js/main.b4f5dc1b.chunk.js","sourcesContent":["export default class Diagram {\r\n    constructor(size,ctx,shapes) {\r\n      this.size = size;\r\n      this.bkgd = \"white\";\r\n      this.color = \"black\";\r\n      this.ctx = ctx; \r\n      this.ctx.fillStyle = this.bkgd;\r\n      this.ctx.fillRect(0,0,size,size);\r\n      this.ctx.fillStyle = this.color;\r\n      this.ctx.strokeStyle = this.color;\r\n      this.ctx.lineWidth = 1.2;\r\n      this.symbols = shapes; \r\n   }\r\n   \r\n    addSymbol(id) {\r\n      if (this.symbols.includes(id)) return;\r\n      this.symbols.push(id);\r\n      this._drawSymbol(id);\r\n    }\r\n   \r\n    deleteSymbol(id) {\r\n      if (!this.symbols.includes(id)) return;\r\n      this.symbols.splice(this.symbols.indexOf(id), 1);\r\n      this._clear();\r\n      this._redraw();\r\n    }\r\n  \r\n    clearDiagram() {\r\n      this.symbols = [];\r\n      this._clear();\r\n    }    \r\n  \r\n    _clear() {\r\n      this.ctx.clearRect(0,0,this.size,this.size);\r\n      this.ctx.fillStyle = this.bkgd;\r\n      this.ctx.fillRect(0,0,this.size,this.size);\r\n      this.ctx.fillStyle = this.color;\r\n    }\r\n  \r\n    _redraw() {\r\n      let s;\r\n      for (s of this.symbols) this._drawSymbol(s);\r\n    }\r\n  \r\n    _drawSymbol(id) {\r\n      switch (id)  {\r\n        case \"A1\": this._drawA1(); break;\r\n        case \"A2\": this._drawA2(); break;\r\n        case \"A3\": this._drawA3(); break;\r\n        case \"A4\": this._drawA4(); break;\r\n        case \"B1\": this._drawB1(); break;\r\n        case \"B2\": this._drawB2(); break;\r\n        case \"B3\": this._drawB3(); break;\r\n        case \"B4\": this._drawB4(); break;\r\n        case \"C1\": this._drawC1(); break;\r\n        case \"C2\": this._drawC2(); break;\r\n        case \"C3\": this._drawC3(); break;\r\n        case \"C4\": this._drawC4(); break;\r\n        case \"D1\": this._drawD1(); break;\r\n        case \"D2\": this._drawD2(); break;\r\n        case \"D3\": this._drawD3(); break;\r\n        case \"D4\": this._drawD4(); break;\r\n        case \"E1\": this._drawE1(); break;\r\n        case \"E2\": this._drawE2(); break;\r\n        case \"E3\": this._drawE3(); break;\r\n        case \"E4\": this._drawE4(); break;\r\n        case \"F1\": this._drawF1(); break;\r\n        case \"F2\": this._drawF2(); break;\r\n        case \"F3\": this._drawF3(); break;\r\n        case \"F4\": this._drawF4(); break;\r\n        case \"Left\": this._drawLeft(); break;\r\n        case \"Right\": this._drawRight(); break;\r\n        case \"RightCompl\": this._drawRightCompl(); break;\r\n        case \"AND\": this._drawAND(); break;\r\n        case \"OR\": this._drawOR(); break;\r\n        case \"XOR\": this._drawXOR(); break;\r\n        default:\r\n     }         \r\n   }\r\n  \r\n    _drawA1() {\r\n      //Line vertical\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, 0);\r\n      this.ctx.lineTo(this.size/2, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA2() {\r\n      //Line horizontal\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0, this.size/2);\r\n      this.ctx.lineTo(this.size, this.size/2);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA3() {\r\n      //Diagonal left\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0, 0);\r\n      this.ctx.lineTo(this.size, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA4() {\r\n      //Diagonal right\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size, 0);\r\n      this.ctx.lineTo(0, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB1() {\r\n      //Arc top left\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 1*Math.PI, 1.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB2() {\r\n      //Arc top right\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 1.5*Math.PI, 0);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB3() {\r\n      //Arc bottom left\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 0.5*Math.PI, 1*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n    \r\n    _drawB4() {\r\n      //Arc bottom right\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 0, 0.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawC1() {\r\n      //Dot top left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(4,4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC2() {\r\n      //Dot top right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-4,4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC3() {\r\n      //Dot bottom right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-4,this.size-4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC4() {\r\n      //Dot bottom left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(4,this.size-4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawD1() {\r\n      //Star small\r\n      const r = 0.1*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD2() {\r\n      //Star medium\r\n      const r = 0.16*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD3() {\r\n      //Star large\r\n      const r = 0.22*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD4() {\r\n      //Square\r\n      const a = this.size - 4;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(2, 2);\r\n      this.ctx.lineTo(a+2, 2);\r\n      this.ctx.lineTo(a+2, a+2);\r\n      this.ctx.lineTo(2, a+2);\r\n      this.ctx.closePath();\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawE1() {\r\n      //Arrow up\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, this.size/2-8);\r\n      this.ctx.lineTo(this.size/2+6, this.size/2);\r\n      this.ctx.lineTo(this.size/2-6, this.size/2);\r\n      this.ctx.closePath();\r\n      this.ctx.fill();\r\n      this.ctx.lineWidth = 4;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, this.size/2);\r\n      this.ctx.lineTo(this.size/2, this.size/2+8);\r\n      this.ctx.stroke();\r\n      this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE2() {\r\n    //Arrow right\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2+8, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2+6);\r\n    this.ctx.lineTo(this.size/2, this.size/2-6);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2-8, this.size/2);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE3() {\r\n    //Arrow down\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2+8);\r\n    this.ctx.lineTo(this.size/2-6, this.size/2);\r\n    this.ctx.lineTo(this.size/2+6, this.size/2);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2-8);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE4() {\r\n    //Arrow left\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2-8, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2-6);\r\n    this.ctx.lineTo(this.size/2, this.size/2+6);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2+8, this.size/2);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawF1() {\r\n      //Circle top\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2,6, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF2() {\r\n      //Circle bottom\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2,this.size-6, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF3() {\r\n      //Circle left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(6,this.size/2, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF4() {\r\n      //Circle right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-6,this.size/2, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _strokeStar(ctx, x, y, r, n, inset) {\r\n    //Adaptable to any shape with rotational symmetry\r\n    //from https://stackoverflow.com/questions/25837158/how-to-draw-a-star-by-using-canvas-html5\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.translate(x, y);\r\n    ctx.moveTo(0,0-r);\r\n    for (var i = 0; i < n; i++) {\r\n        ctx.rotate(Math.PI / n);\r\n        ctx.lineTo(0, 0 - (r*inset));\r\n        ctx.rotate(Math.PI / n);\r\n        ctx.lineTo(0, 0 - r);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    }\r\n\r\n    _drawLeft() {\r\n      //Left paranthesis\r\n      const r = 0.8*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(1.5*this.size, this.size/2, r, 0.5*Math.PI, 1.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n\r\n    _drawRight() {\r\n      //Right paranthesis and equality sign\r\n      const r = 0.8*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(-0.5*this.size, this.size/2, r, 1.5*Math.PI, 0.5*Math.PI);\r\n      this.ctx.moveTo(0.6*this.size, 0.45*this.size);\r\n      this.ctx.lineTo(0.9*this.size, 0.45*this.size);\r\n      this.ctx.moveTo(0.6*this.size, 0.55*this.size);\r\n      this.ctx.lineTo(0.9*this.size, 0.55*this.size);\r\n      this.ctx.stroke();\r\n    }\r\n\r\n    _drawRightCompl() {\r\n      //Right paranthesis, complement symbol and equality sign\r\n      this._drawRight();\r\n      const r = 0.12*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(0.5*this.size, 0.14*this.size, r, 0.4*Math.PI, 1.6*Math.PI);\r\n      this.ctx.stroke();            \r\n    }\r\n\r\n    _drawAND() {\r\n      //Union operator\r\n      const r = 0.25*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(0.6*this.size, 0.6*this.size, r, Math.PI, 2*Math.PI);\r\n      this.ctx.moveTo(0.6*this.size+r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size+r, 0.75*this.size);\r\n      this.ctx.moveTo(0.6*this.size-r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size-r, 0.75*this.size);\r\n      this.ctx.stroke();       \r\n    }\r\n\r\n    _drawOR() {\r\n      //Intersection operator\r\n      const r = 0.25*this.size;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(0.6*this.size, 0.6*this.size, r, 0, Math.PI);\r\n      this.ctx.moveTo(0.6*this.size+r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size+r, 0.45*this.size);\r\n      this.ctx.moveTo(0.6*this.size-r, 0.6*this.size);\r\n      this.ctx.lineTo(0.6*this.size-r, 0.45*this.size);\r\n      this.ctx.stroke();   \r\n\r\n    }\r\n\r\n    _drawXOR() {\r\n      //Symmetric difference operator\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0.5*this.size, 0.25*this.size);\r\n      this.ctx.lineTo(0.8*this.size, 0.75*this.size);\r\n      this.ctx.lineTo(0.2*this.size, 0.75*this.size);\r\n      this.ctx.closePath();\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n  }  //end of Diagram class\r\n\r\n  export function decodePicture(hexPic) {\r\n    //return array of symbols for display in a diagram\r\n    let categories = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\r\n    let res = [];\r\n    \r\n    //Padding leading zeros to get the hexPic of LENGTH 6!!!\r\n    let padded = \"0000000000\" + hexPic;\r\n    let valid = padded.substr(padded.length - 6);\r\n    \r\n    for (let i = 0; i < categories.length; i++)  {\r\n      let catName = categories[i];\r\n      let numCat = parseInt(valid.charAt(i), 16);\r\n      let shape1 =  (numCat & 8) >> 3;\r\n      let shape2 =  (numCat & 4) >> 2;\r\n      let shape3 =  (numCat & 2) >> 1;\r\n      let shape4 =  (numCat & 1);\r\n      if (shape1) res.push(catName+\"1\");  \r\n      if (shape2) res.push(catName+\"2\");  \r\n      if (shape3) res.push(catName+\"3\");  \r\n      if (shape4) res.push(catName+\"4\");  \r\n    } \r\n    return res;   \r\n  }\r\n  \r\nexport function encodePicture(symbols) {\r\n    //return a hexadecimal string 6-char long\r\n    let categories = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\r\n    let res = \"\";  \r\n    for (let i = 0; i < categories.length; i++)  {  \r\n      let cat =  categories[i];\r\n      let d1 = symbols.includes(cat+\"1\");\r\n      let d2 = symbols.includes(cat+\"2\");\r\n      let d3 = symbols.includes(cat+\"3\");\r\n      let d4 = symbols.includes(cat+\"4\");\r\n      let r = (d1*8 + d2*4 + d3*2 + d4).toString(16);\r\n      res = res + r;\r\n    }  \r\n    return res;  \r\n  } \r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Diagram from './iq_utils.js';\r\n\r\nexport default class DiagramCanvas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.size = 48; \r\n        this.diagram = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(\">>>>>>>> componentDidMount...\");\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        this.diagram = new Diagram (this.size, ctx, this.props.shapes);\r\n        this.diagram._redraw();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(\">>>>>>>> componentDidUpdate...\");\r\n        this.diagram.symbols = this.props.shapes;\r\n        this.diagram._clear();\r\n        this.diagram._redraw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas ref=\"canvas\" width={this.size} height={this.size}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../stylesheets/iq_test-style.css';\r\nimport DiagramCanvas from './iq_diagram-canvas.js';\r\nimport {decodePicture, encodePicture} from \"./iq_utils.js\";\r\n\r\nexport default class TestCase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            answer: [],\r\n            btnStates: {A1:\"off\", B1:\"off\", C1:\"off\", D1:\"off\", E1:\"off\", F1:\"off\",\r\n                        A2:\"off\", B2:\"off\", C2:\"off\", D2:\"off\", E2:\"off\", F2:\"off\",\r\n                        A3:\"off\", B3:\"off\", C3:\"off\", D3:\"off\", E3:\"off\", F3:\"off\",\r\n                        A4:\"off\", B4:\"off\", C4:\"off\", D4:\"off\", E4:\"off\", F4:\"off\"}\r\n        }\r\n    }\r\n\r\n\r\n    selectShapeHandler = (e) => {\r\n        const btnShape = e.currentTarget.id;\r\n        const newAnswer = [...this.state.answer];\r\n        const newBtnStates = {...this.state.btnStates};\r\n\r\n        if (newBtnStates[btnShape] === \"off\") {//adding to the Answer, duplicates not allowed\r\n            if (newAnswer.indexOf(btnShape) < 0) {\r\n              newAnswer.push(btnShape);\r\n              newBtnStates[btnShape] = \"on\";\r\n              this.setState ({answer: newAnswer, btnStates: newBtnStates});\r\n            }\r\n        }\r\n        else if (newBtnStates[btnShape] === \"on\") {//removing from the Answer,\r\n            if (newAnswer.indexOf(btnShape) >= 0) {\r\n                newAnswer.splice(newAnswer.indexOf(btnShape), 1);\r\n                newBtnStates[btnShape] = \"off\";\r\n                this.setState ({answer: newAnswer, btnStates: newBtnStates});\r\n            }\r\n        }\r\n    }\r\n\r\n    resetAnswerHandler = () => {\r\n        const btnStatesCopy = {...this.state.btnStates};\r\n        for (let key in btnStatesCopy) btnStatesCopy[key] = \"off\";\r\n        this.setState ({answer: [], btnStates: btnStatesCopy});\r\n    }\r\n\r\n    nextCaseHandler = () => {\r\n        this.props.nextCaseHandler(encodePicture(this.state.answer))\r\n        this.resetAnswerHandler();\r\n    }\r\n\r\n           \r\n    render() {\r\n\r\n        const init = (this.props.case === null); \r\n  \r\n        return (\r\n            <div>\r\n\r\n                <div id =\"test-and-loader\">\r\n\r\n                    <div id=\"test-container\">\r\n                        <div className=\"canvas-matrix\">  \r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.result)}/></div>\r\n                            </div>\r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.result)}/></div>\r\n                            </div>\r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line3.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line3.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={this.state.answer}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"nav-buttons\">\r\n                            <button className={init ? \"nav-btn-init shake\": \"nav-btn\"}   \r\n                                    onClick={this.nextCaseHandler}> {init ? \"Start Test\": \"Submit\"} </button>\r\n                            <button className=\"nav-btn\"  \r\n                                    onClick={this.resetAnswerHandler}>Reset</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"canvas-matrix\">\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+1]} \r\n                                key={c+1} id={c+1} onClick={this.selectShapeHandler} >\r\n                            <DiagramCanvas shapes={[c+1]} />\r\n                        </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+2]} \r\n                                key={c+2} id={c+2} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+2]} />\r\n                        </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+3]} \r\n                                key={c+3} id={c+3} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+3]} />\r\n                        </button>\r\n                        )}\r\n                     </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+4]} \r\n                                key={c+4} id={c+4} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+4]} />\r\n                        </button>\r\n                        )}                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../stylesheets/iq_result.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Iqresult extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.result = this.props.result;\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\">>>> Mounted. Trying to store result...\");\r\n    //Send result to the DB\r\n    axios\r\n    .post(\"/api/results\", this.result)\r\n    .then((fromApi) => {\r\n      //console.log(\"===== Result stored. \", fromApi.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(\"ERROR while storing the test result: \", err);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //console.log(\">>>> Unmounted...\");\r\n  }\r\n\r\n  render() {\r\n    \r\n    const scores = this.result.score;\r\n    const questions = this.result.numberOfCases;\r\n    const ergebnis = (Math.round((scores / questions) * 100)).toString();\r\n\r\n    return (\r\n     \r\n      <div className=\"resultPage\">\r\n        <div className=\"resultHeader\">\r\n          <h1>\r\n            Result of your current test\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"tableresult\">\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Test Name :</div>\r\n            <div className=\"resulttd\">{this.result.testName}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Complexity :</div>\r\n            <div className=\"resulttd\">{this.result.complexity}</div>\r\n          </div>\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Executed Cases :</div>\r\n            <div className=\"resulttd\">{this.result.numberOfCases}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Elapsed Time :</div>\r\n            <div className=\"resulttd\">{this.result.elapsedTime} seconds</div>\r\n          </div>\r\n          \r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Your Score :</div>\r\n            <div className=\"resulttd\">{this.result.score}</div>\r\n          </div>\r\n          \r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Percentage :</div>\r\n            <div className=\"resulttd\">{ergebnis} %</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"buttonbox\">\r\n          \r\n        <Link to=\"/resultlist\" style={{color:'white', textDecoration:'none'}} >\r\n            <button className=\"rbutton\">Resultlist</button>\r\n        </Link>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../stylesheets/iq_test-style.css'\r\nimport TestCase from './iq_test-case.js';\r\nimport Iqresult from \"./iq_result\";\r\nimport axios from \"axios\";\r\n\r\nexport default class IQttyTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.caseStartTimestamp = 0;\r\n    this.testTime = 0; //sum of case times\r\n    this.caseLimit =\r\n    this.props.match.params.timeout === \"yes\" ? 90 * 1000 : 60 * 60 * 1000; //time limit per case\r\n    this.animLimit = 2 * 1000; //time between cases\r\n    this.caseTimer = 0;\r\n    this.loadTimer = 0;\r\n    this.currentScore = 0;\r\n    this.testResult = null;\r\n\r\n    this.state = {\r\n      test: null, //Test obj from DB\r\n      cases: null, //Array of cases from DB\r\n      currentCaseIdx: -1,\r\n      answers: [],\r\n      endOfTest: false,\r\n      animOn: false\r\n    };\r\n  }\r\n\r\n  nextCaseHandler = answer => {\r\n    clearTimeout(this.caseTimer);\r\n\r\n    if (this.state.currentCaseIdx === -1) {\r\n      //Load the first case\r\n      this.setState({\r\n        currentCaseIdx: this.state.currentCaseIdx + 1,\r\n        animOn: true,\r\n        endOfTest: false,\r\n        answers: []\r\n      });\r\n      this.loadTimer = setTimeout(this.animTimeout.bind(this), this.animLimit);\r\n      return;\r\n    }\r\n\r\n    if (this.state.currentCaseIdx === this.state.cases.length - 1) {\r\n      //Finish the test\r\n\r\n      this.testTime =\r\n        this.testTime + (new Date().getTime() - this.caseStartTimestamp);\r\n\r\n      const answersCopy = [...this.state.answers];\r\n      answersCopy.push(answer);\r\n      //check answer and update score\r\n      this.currentScore = this.answerCorrect(answer)\r\n        ? this.currentScore + 1\r\n        : this.currentScore;\r\n\r\n      this.finishTest(answersCopy);  //Promise inside!\r\n\r\n      this.setState({answers: answersCopy, animOn: false, endOfTest: true });\r\n\r\n      return;\r\n    }\r\n\r\n    this.testTime =\r\n      this.testTime + (new Date().getTime() - this.caseStartTimestamp);\r\n\r\n    //check answer and update score\r\n    this.currentScore = this.answerCorrect(answer)\r\n      ? this.currentScore + 1\r\n      : this.currentScore;\r\n\r\n    const answersCopy = [...this.state.answers];\r\n    answersCopy.push(answer);\r\n    this.setState({\r\n      currentCaseIdx: this.state.currentCaseIdx + 1,\r\n      animOn: true,\r\n      endOfTest: false,\r\n      answers: answersCopy\r\n    });\r\n\r\n    this.loadTimer = setTimeout(this.animTimeout.bind(this), this.animLimit);\r\n  };\r\n\r\n  animTimeout() {\r\n    this.caseStartTimestamp = new Date().getTime();\r\n    this.setState({ animOn: false });\r\n    this.caseTimer = setTimeout(this.caseTimeout.bind(this), this.caseLimit);\r\n  }\r\n\r\n  caseTimeout() {\r\n    this.nextCaseHandler(\"000000\");\r\n  }\r\n\r\n  answerCorrect(answer) {\r\n    const sysAnswer = this.state.cases[this.state.currentCaseIdx].line3.result;\r\n    const correct = parseInt(answer, 16) === parseInt(sysAnswer, 16);\r\n    //console.log(\">>> System answer: \" + sysAnswer + \" Your answer: \" + answer + \" is \" + correct );\r\n    return correct;\r\n  }\r\n\r\n  finishTest(answers) {\r\n\r\n    this.testResult = {\r\n      userName: this.props.userName,\r\n      testName: this.state.test.testName,\r\n      complexity: this.state.test.complexity,\r\n      elapsedTime: (this.testTime / 1000).toFixed(1),\r\n      numberOfCases: this.state.test.cases.length,\r\n      score: this.currentScore,\r\n      answers: answers,\r\n      testId: this.state.test._id\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.complexity)\r\n      axios\r\n        .get(`/api/tests?complexity=${this.props.match.params.complexity}`)\r\n        .then(resFromApi => {\r\n          this.setState({\r\n            test: resFromApi.data.testData,\r\n            cases: resFromApi.data.arrayOfCases\r\n          });\r\n        });\r\n    else\r\n      axios\r\n        .get(`/api/tests/id/${this.props.match.params.testId}`)\r\n        .then(resFromApi => {\r\n          this.setState({\r\n            test: resFromApi.data.testData,\r\n            cases: resFromApi.data.arrayOfCases\r\n          });\r\n        });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.caseTimer);\r\n    clearTimeout(this.loadTimer);\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.endOfTest)\r\n      return (\r\n        <div>\r\n          <Iqresult result={this.testResult}/>\r\n        </div>\r\n      );\r\n\r\n    else if (this.state.animOn) {\r\n      //const curTest = this.props.test;\r\n      const curTest = this.state.test;\r\n      return (\r\n        <div>\r\n          <div id=\"header\">\r\n            <div>\r\n              <h2>\r\n                <span>Test: </span>{\" \"}\r\n                <span id=\"test-name\">{curTest.testName}</span>\r\n              </h2>\r\n            </div>\r\n            <div>\r\n              <h3>\r\n                <span>Complexity: </span>\r\n                <span id=\"complexity\">{curTest.complexity}</span>\r\n              </h3>\r\n            </div>\r\n            <div>\r\n              <h3 id=\"current-case\">\r\n                Case: {this.state.currentCaseIdx + 1} /{\" \"}\r\n                {this.state.cases.length}\r\n              </h3>\r\n            </div>\r\n           \r\n          </div>\r\n          <div>\r\n            <img src=\"/robot.gif\" alt=\"\" width=\"500\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.state.currentCaseIdx === -1) {\r\n      return (\r\n        <div >\r\n          <div className=\"startPageFlex\">\r\n            <div className=\"startTestCase\">\r\n              <TestCase case={null} nextCaseHandler={this.nextCaseHandler} />\r\n            </div>\r\n            <div className=\"textStartPage\">\r\n              Your test has not started yet.\r\n              <br />\r\n              Now, you have time for getting familiar with the layout and\r\n              buttons.\r\n              <br /><br />\r\n              The keyboard at the bottom consists of <span>24 buttons</span>{\" \"}\r\n              representing <br />\r\n              6 sets of shapes: lines, arcs, dots, stars and square, arrows, and\r\n              circles.\r\n              <br />\r\n              By clicking on a button you are adding a corresponding shape to\r\n              your <br />\r\n              answer. By clicking it again you are revoking your choice. Please\r\n              try.\r\n              <br /><br />\r\n              The <span>Reset button</span> will clear your answer completely.\r\n              Try this one, too.\r\n              <br /><br />\r\n              The <span>Start Test</span> button will load the first test case\r\n              and the test will begin.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.state.currentCaseIdx === 0) {\r\n      const curTest = this.state.test;\r\n      const curCase = this.state.cases[this.state.currentCaseIdx];\r\n      return (\r\n        \r\n        <div >\r\n          <div id=\"header\">\r\n            <div >\r\n              <h2>\r\n                <span>Test: </span>{\" \"}\r\n                <span id=\"test-name\">{curTest.testName}</span>\r\n              </h2>\r\n            </div>\r\n            <div>\r\n              <h3>\r\n                <span>Complexity: </span>\r\n                <span id=\"complexity\">{curTest.complexity}</span>\r\n              </h3>\r\n            </div>\r\n            <div>\r\n              <h3 id=\"current-case\">\r\n                Case: {this.state.currentCaseIdx + 1} /{\" \"}\r\n                {this.state.cases.length}\r\n              </h3>\r\n            </div>\r\n            \r\n          </div>\r\n          <div className='startPageFlex2'>\r\n          <div className='startTestCase2'>\r\n               <TestCase case={curCase} nextCaseHandler={this.nextCaseHandler} />\r\n          </div>\r\n\r\n            <div className='textTestPage'>\r\n              Your first test case is there!\r\n              <br />\r\n              In the 3x3 matrix you see a mix of shapes.\r\n              <br /><br />\r\n              Your first step is to identify the shape categories used.\r\n              <br />\r\n              Then, <b>for each category</b>, please analyze the logic applied to the\r\n              category in rows 1 and 2. <br />\r\n              Finally, choose your answer in row 3, using the same logic.\r\n              <br /><br />\r\n              When you are ready with your answer please Submit to proceed to\r\n              the next test case.\r\n              <br /><br />\r\n              If you are interested, here is a small tip for you: the \"logic\" is\r\n              based on the basic set operations: union, intersection,\r\n              complement, and symmetric difference.\r\n              <br />\r\n             \r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      const curTest = this.state.test;\r\n      const curCase = this.state.cases[this.state.currentCaseIdx];\r\n      return (\r\n        \r\n        <div className='testpage-background2' >\r\n          <div id=\"header\">\r\n            <div >\r\n              <h2>\r\n                <span>Test: </span>{\" \"}\r\n                <span id=\"test-name\">{curTest.testName}</span>\r\n              </h2>\r\n            </div>\r\n            <div>\r\n              <h3>\r\n                <span>Complexity: </span>\r\n                <span id=\"complexity\">{curTest.complexity}</span>\r\n              </h3>\r\n            </div>\r\n            <div>\r\n              <h3 id=\"current-case\">\r\n                Case: {this.state.currentCaseIdx + 1} /{\" \"}\r\n                {this.state.cases.length}\r\n              </h3>\r\n            </div>\r\n           \r\n          </div>\r\n          <div className='startPageFlex2'>\r\n          <div className='startTestCase2'>\r\n               <TestCase case={curCase} nextCaseHandler={this.nextCaseHandler} />\r\n          </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    }\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst signup = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/signup\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/login\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  axios.delete(\"/api/auth/logout\");\r\n};\r\n\r\nexport { signup, login, logout };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as Nav } from \"react-bootstrap\";\r\nimport { logout } from \"../services/auth\";\r\n\r\nconst IqNavbar = props => {\r\n  const handleLogout = () => {\r\n    // destroys the session on the server\r\n    logout();\r\n    // updates the `user` state in App\r\n    props.setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Nav className=\"nav justify-content-end\" bg=\"primary\" fixed=\"top\">\r\n      {props.user ? (\r\n        <div>\r\n          <Link to=\"/\">Welcome {props.user.username}</Link>\r\n          <Link to=\"/training\">Training</Link>\r\n          \r\n          <Link to=\"/resultlist\">Results</Link>\r\n          <Link to=\"/\" onClick={handleLogout}>Logout</Link>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/signup\">Signup</Link>\r\n          <Link to=\"/login\">Login</Link>\r\n        </div>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default IqNavbar;\r\n","import React from \"react\";\r\nimport \"../stylesheets/iq_startpage.css\";\r\n\r\nclass IqStartpage extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <section className=\"homePage-container\">\r\n        <div>\r\n          <h1>IQtty</h1>          \r\n          <p>Prepare for Assessment Centers and Logic-Tests</p>\r\n          <p>Signup and try our amazing brain game</p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqStartpage;\r\n","import React, { Component } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass IqSignup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    signup(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/training\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h2 className = \"signup-login-header\">Signup</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">User name: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password (min 8 characters): </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Sign up</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqSignup;\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass IqLogin extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    login(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/training\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className = \"signup-login-header\">Login</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">User name: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Log in</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqLogin;\r\n","import React, { Component } from \"react\";\r\nimport \"../stylesheets/iq_training.css\";\r\nimport { Link } from \"react-router-dom\";\r\n//import IQttyTest from \"./iq_test\";\r\n//import { Tooltip } from \"react-bootstrap\";\r\nclass IqTraining extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      complexity: \"Low\",\r\n      timeout: \"no\",\r\n    };\r\n\r\n    this.handleComplexity = this.handleComplexity.bind(this);\r\n    this.handleTimeout = this.handleTimeout.bind(this);\r\n  }\r\n\r\n  handleComplexity(event) {\r\n    this.setState({\r\n      complexity: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTimeout(event) {\r\n    this.setState({\r\n      timeout: event.target.value\r\n    });\r\n  }\r\n\r\n   render() {\r\n\r\n      return (\r\n        <section className=\"trainingsPage-container\">\r\n          <div className=\"trainingsPage-text\">\r\n            <h1>Welcome to IQtty training</h1>            \r\n              Matrix tests are used in assessment centers to examine<br/>\r\n              your skills in inductive reasoning.<br/>\r\n              A matrix consists of nine boxes. One box is empty.<br/>\r\n              Your task is to discover logical connections and compose<br/>\r\n              the empty box based on the rule you found.<br/>            \r\n              Please select your options and start a test.<br/>           \r\n\r\n            <section id=\"selection\">\r\n              <article>\r\n                <h3>Select complexity :</h3>\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"Low\"\r\n                      checked={true}\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                    &nbsp;Low\r\n                  </label>\r\n                </li>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"Medium\"\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                       &nbsp;Medium\r\n                  </label>\r\n                </li>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"High\"\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                   &nbsp; High\r\n                  </label>\r\n                </li>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"complexity\"\r\n                      type=\"radio\"\r\n                      value=\"Random\"\r\n                      onChange={this.handleComplexity}\r\n                    />\r\n                   &nbsp; Random\r\n                  </label>\r\n                </li>\r\n              </article>\r\n              <article>\r\n                <h3>Time limit ?</h3>\r\n\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"timeout\"\r\n                      type=\"radio\"\r\n                      value=\"yes\"\r\n                      onChange={this.handleTimeout}\r\n                    />\r\n                   &nbsp;Yes (90 sec per test case)\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <label>\r\n                    <input\r\n                      name=\"timeout\"\r\n                      type=\"radio\"\r\n                      value=\"no\"\r\n                      checked={true}\r\n                      onChange={this.handleTimeout}\r\n                    />\r\n                    &nbsp;No\r\n                  </label>\r\n                </li>\r\n              </article>\r\n            </section>                       \r\n          </div>\r\n          <div className = \"button-container\">\r\n              <Link to = {`/test/new/${this.state.complexity}/${this.state.timeout}`}>\r\n                <button className=\"trainingsPage-button\">Start Test</button>\r\n              </Link>\r\n            </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default IqTraining;\r\n","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../stylesheets/iq_resultlist.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass IqResultlist extends Component {\r\n  \r\n  state = {\r\n    results: []\r\n  };      \r\n         \r\n  componentDidMount() {\r\n      //console.log(\"AllResults --> componentDidMount()\")\r\n      axios.get(\"/api/resultlist\")\r\n          .then(response => {\r\n              //console.log(\"AllResults --> Promise resolved\")\r\n              //console.log(\"Promise resolved Data\", response.data)\r\n              this.setState({ results: response.data })\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Error occured: \", err);\r\n          });\r\n  }\r\n\r\n  render() {\r\n\r\n    const resultList = this.state.results.map(result => {\r\n      let caseNumber = result.numberOfCases;\r\n      let score = result.score;\r\n      let resultInPercentage = Math.round(score/caseNumber * 100)\r\n      let d = new Date(result.createdAt);\r\n      let resDate = d.getFullYear() + \"/\" + (1+d.getMonth()) + \"/\" + d.getDate();\r\n      let resTime = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n\r\n      return (\r\n        <div className=\"trResultlist\" key={result._id}>\r\n          <div className=\"tdResultlist\">{resDate} {resTime}</div>\r\n          <div className=\"tdResultlist\">{result.testName}</div>\r\n          <div className=\"tdResultlist\">{result.complexity}</div>\r\n          <div className=\"tdResultlist\">{result.numberOfCases}</div>\r\n          <div className=\"tdResultlist\">{result.elapsedTime} sec</div>          \r\n          <div className=\"tdResultlist\">{result.score}</div>\r\n          <div className=\"tdResultlist\">{resultInPercentage} %</div>\r\n          \r\n          <Link to = {`/test/id/${result.testId}`}><button className=\"resultlistPage-button\" id= {result.testId}>Test Again</button></Link>\r\n          <Link to = {`/review/id/${result._id}`}><button className=\"resultlistPage-button\" id= {result._id}>Review</button></Link>\r\n\r\n        </div>\r\n      )\r\n\r\n    })\r\n      return(\r\n        <div>      \r\n        <div className = \"resultlistPage\">\r\n          <section className= \"table-resultlist\">\r\n            <h1 className=\"header\">Your Test Results</h1>\r\n            <div className=\"tableResultlist-box\">        \r\n              <div className=\"tableResultlist\">\r\n                <div className=\"trResultlist-header\">\r\n                  <div className=\"thResultlist\">Run on</div>\r\n                  <div className=\"thResultlist\">Test</div>\r\n                  <div className=\"thResultlist\">Complexity</div>\r\n                  <div className=\"thResultlist\">#of Cases</div>\r\n                  <div className=\"thResultlist\">Elapsed Time</div>                  \r\n                  <div className=\"thResultlist\">Score</div>\r\n                  <div className=\"thResultlist\">Result</div>\r\n                  <div className=\"thResultlist\"></div>\r\n                </div>                  \r\n               {resultList}      \r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n      )\r\n    }\r\n  }\r\n  \r\n\r\n\r\nexport default IqResultlist;","import React, { Component } from 'react'\r\nimport '../stylesheets/iq_test-style.css';\r\nimport DiagramCanvas from './iq_diagram-canvas.js';\r\nimport {decodePicture} from \"./iq_utils.js\";\r\n\r\n\r\nexport default class FormulaCanvas extends Component {\r\n\r\n  catPic = (catName, hexPic) => {\r\n    //returns hex picture for one category\r\n    const idx = \"ABCDEF\".indexOf(catName.toUpperCase());\r\n        \r\n    //Padding leading zeros to get the hexPic of LENGTH 6!!!\r\n    const padded = \"0000000000\" + hexPic;\r\n    const valid = padded.substr(padded.length - 6);\r\n    let catPicArr = valid.split(\"\").map((c,i) => (i === idx) ? c : \"0\");\r\n    return catPicArr.join(\"\");\r\n  }\r\n\r\n  render() {\r\n\r\n    const catName = this.props.catName;\r\n    const opName = this.props.opName;\r\n    const line = this.props.line;\r\n    const lineNum = this.props.lineNum;\r\n\r\n    return (\r\n      <div className=\"formula-row\">\r\n        <div className=\"formula-cell\"><DiagramCanvas shapes={[\"Left\"]}/></div>\r\n        <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(this.catPic(catName, line.arg1))}/></div>\r\n        \r\n        <div className=\"formula-cell\"><DiagramCanvas \r\n            shapes={(opName === \"NAND\" || opName === \"NOR\") ? [opName.substr(1)] : [opName]}/></div>\r\n        <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(this.catPic(catName, line.arg2))}/></div>\r\n        \r\n        <div className=\"formula-cell\"><DiagramCanvas \r\n            shapes={(opName === \"NAND\" || opName === \"NOR\") ? [\"RightCompl\"] : [\"Right\"]}/></div> \r\n        <div className={(lineNum===3) ? \"answer-cell-ok\" : \"board-cell\"}><DiagramCanvas shapes={decodePicture(this.catPic(catName, line.result))}/></div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../stylesheets/iq_test-style.css';\r\nimport FormulaCanvas from \"./iq_formula-canvas.js\";\r\n\r\nexport default class CaseReview extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.case = this.props.caseObj;\r\n  }\r\n    \r\n  render() {\r\n\r\n    const ops = [\"AND\",\"NAND\",\"OR\",\"NOR\",\"XOR\"];\r\n    const opDesc = [\"Intersection (AND)\", \"Complement of Intersection (NOT AND)\", \"Union (OR)\", \"Complement of Union (NOT OR)\",\"Symmetric Difference (XOR)\"];\r\n\r\n    const listOfComponentsJSX = this.case.catOps.map((c,i) => \r\n        <li key = {c._id} className=\"case-comp\"> \r\n            \r\n            <div className=\"canvas-matrix\">  \r\n              <FormulaCanvas opName={c.opName} catName={c.catName} line={this.case.line1} lineNum = {1}/>\r\n              <FormulaCanvas opName={c.opName} catName={c.catName} line={this.case.line2} lineNum = {2}/>\r\n              <FormulaCanvas opName={c.opName} catName={c.catName} line={this.case.line3} lineNum = {3}/>\r\n            </div>\r\n            <br/>\r\n            <div className=\"op-desc\">{opDesc[ops.indexOf(c.opName)]}</div>       \r\n\r\n        </li>);\r\n\r\n    return (\r\n      <div>\r\n          <ul className=\"case-comp-list\">\r\n             {listOfComponentsJSX}\r\n          </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../stylesheets/iq_test-style.css';\r\nimport DiagramCanvas from './iq_diagram-canvas.js';\r\nimport {decodePicture} from \"./iq_utils.js\";\r\nimport CaseReview from \"./iq_case-review\";\r\nimport axios from 'axios';\r\n\r\nexport default class TestReview extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      test: null,  //Test obj from DB  \r\n      cases: [],  //Array of cases from DB \r\n      result: null,\r\n      isDetailView: [true]  \r\n    }\r\n  }\r\n    \r\n  compare(answer1, answer2) { \r\n    return (parseInt(answer1,16) === parseInt(answer2,16));\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const resultId = this.props.match.params.resultId;\r\n    \r\n    //console.log(\">>>>>>> Result ID from Karin: \", resultId);\r\n\r\n    axios.get(`/api/results/id/${resultId}`)\r\n      .then(resultData => {\r\n        const testId = resultData.data.testId;\r\n        axios.get(`/api/tests/id/${testId}`)\r\n        .then(testDataFromApi => {\r\n          this.setState({\r\n            result: resultData.data,\r\n            test: testDataFromApi.data.testData,\r\n            cases: testDataFromApi.data.arrayOfCases  \r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n  lessBtnHandler =  e => {\r\n    const isDetailViewCopy = [...this.state.isDetailView];\r\n    isDetailViewCopy[e.target.id] = false;\r\n    this.setState ({\r\n      isDetailView: isDetailViewCopy\r\n    })\r\n  }\r\n\r\n  moreBtnHandler =  e => {\r\n    const isDetailViewCopy = [...this.state.isDetailView];\r\n    isDetailViewCopy[e.target.id] = true;\r\n    this.setState ({\r\n      isDetailView: isDetailViewCopy\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const test = this.state.test;\r\n    const result = this.state.result;\r\n\r\n    if (!test) return (null);  //render nothing if there is no test data\r\n\r\n    const d = new Date(result.createdAt);\r\n    const resDate = d.getDate() + \"/\" + (1+d.getMonth()) + \"/\" + d.getFullYear();\r\n    const resTime = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n\r\n    //console.log(\">>>>>>RESULT OBJECT\", result);\r\n    //console.log(\">>>>>>TEST OBJECT\", test);\r\n\r\n    const listOfCasesJSX = this.state.cases.map((c,i) => \r\n           <li key = {c._id} > \r\n              <h5><b>Case {i+1}</b></h5>\r\n              <div className=\"test-rev-row\">\r\n              <div className=\"canvas-matrix\">  \r\n                <div className=\"board-row\">\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line1.arg1)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line1.arg2)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line1.result)}/></div>\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line2.arg1)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line2.arg2)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line2.result)}/></div>\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line3.arg1)}/></div>\r\n                    <div className=\"board-cell\"><DiagramCanvas shapes={decodePicture(c.line3.arg2)}/></div>\r\n                    <div className=\"answer-cell-ok\"><DiagramCanvas shapes={decodePicture(c.line3.result)}/></div>\r\n                </div>\r\n\r\n                  {(this.compare(c.line3.result, result.answers[i])) ?\r\n                    <div className=\"answer-row\">  \r\n                      <div><b>Your answer <br/> is correct</b></div> \r\n                      <div className=\"answer-cell-ok\"><DiagramCanvas shapes={decodePicture(result.answers[i])}/></div>  \r\n                    </div>                   \r\n                   :\r\n                    <div className=\"answer-row\">  \r\n                      <div><b>Your answer <br/> is wrong</b></div> \r\n                      <div className=\"answer-cell-err\"><DiagramCanvas shapes={decodePicture(result.answers[i])}/></div>   \r\n                    </div>            \r\n                  }\r\n\r\n              </div>\r\n              {(this.state.isDetailView[i]) ?\r\n                 <div className=\"case-rev\">\r\n                   <div><button id={i} className=\"more-less-btn\" onClick={this.lessBtnHandler}>less...</button></div>\r\n                   <div><CaseReview caseObj={c} caseIdx={i} answer={c.line3.result}/></div>\r\n                 </div>\r\n                 :\r\n                 <div className=\"case-rev\">\r\n                   <div><button id={i} className=\"more-less-btn\" onClick={this.moreBtnHandler}>more...</button></div>\r\n                 </div>\r\n              }\r\n            </div>\r\n           </li>);\r\n\r\n    return (\r\n      <div>\r\n          <div id=\"header\">\r\n            <div><h4 id=\"test-name\">Result for the <b>Test {test.testName}</b> of {resDate} at {resTime}</h4></div>  \r\n            <br/> \r\n          </div>\r\n          <ul>\r\n             {listOfCasesJSX}\r\n          </ul>          \r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport IQttyTest from \"./components/iq_test.js\";\r\nimport \"./App.css\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport IqNavbar from \"./components/iq_Navbar\";\r\nimport IqStartpage from \"./components/iq_Startpage\";\r\nimport IqSignup from \"./components/iq_Signup\";\r\nimport IqLogin from \"./components/iq_Login\";\r\nimport IqTraining from \"./components/iq_Training\";\r\nimport IqResultlist from \"./components/iq_Resultlist\";\r\n//import Iqresult from \"./components/iq_result\";\r\nimport TestReview from \"./components/iq_test-review\"\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    user: this.props.user\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({\r\n      user: user\r\n    });\r\n  };\r\n\r\n  trainingRoute = props => {\r\n    if (this.state.user) {\r\n      return <IqTraining {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  resultListRoute = props => {\r\n    if (this.state.user) {\r\n      return <IqResultlist {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  testNewRoute = props => {\r\n    if (this.state.user) {\r\n      return (\r\n        <IQttyTest {...props} userName={this.state.user.username}/>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  testAgainRoute = props => {\r\n    if (this.state.user) {\r\n      return (\r\n        <IQttyTest {...props} userName={this.state.user.username}/>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <IqNavbar user={this.state.user} setUser={this.setUser} />\r\n        <Switch>\r\n\r\n          <Route \r\n            exact \r\n            path=\"/test/id/:testId\" \r\n            render= {this.testAgainRoute}\r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/test/new/:complexity/:timeout\" \r\n            render= {this.testNewRoute}\r\n          />          \r\n          <Route exact path=\"/review/id/:resultId\" render= {\r\n            props => <TestReview {...props} /> } \r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/\" \r\n            component={IqStartpage} \r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/signup\"\r\n            render={props => <IqSignup {...props} setUser={this.setUser} />}\r\n          />\r\n          <Route\r\n            exact \r\n            path=\"/login\" \r\n            render={props => <IqLogin {...props} setUser={this.setUser} />}\r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/training\" \r\n            render={this.trainingRoute}\r\n          />\r\n          <Route \r\n            exact \r\n            path=\"/resultlist\" \r\n            render={this.resultListRoute} \r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\naxios.get(\"/api/auth/loggedin\").then(response => {\r\n  const user = response.data;\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App user={user} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}