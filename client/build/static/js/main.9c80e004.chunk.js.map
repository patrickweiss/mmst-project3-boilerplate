{"version":3,"sources":["components/iq_utils.js","components/iq_diagram-canvas.js","components/iq_test-case.js","components/iq_result.js","components/iq_test.js","services/auth.js","components/iq_Navbar.js","components/iq_Startpage.js","components/iq_Signup.js","components/iq_Login.js","components/iq_Training.js","components/iq_Resultlist.js","components/iq_admin.js","App.js","serviceWorker.js","index.js"],"names":["Diagram","size","ctx","shapes","this","bkgd","color","fillStyle","fillRect","strokeStyle","lineWidth","symbols","id","includes","push","_drawSymbol","splice","indexOf","_clear","_redraw","clearRect","s","_drawA1","_drawA2","_drawA3","_drawA4","_drawB1","_drawB2","_drawB3","_drawB4","_drawC1","_drawC2","_drawC3","_drawC4","_drawD1","_drawD2","_drawD3","_drawD4","_drawE1","_drawE2","_drawE3","_drawE4","_drawF1","_drawF2","_drawF3","_drawF4","beginPath","moveTo","lineTo","stroke","r","arc","Math","PI","fill","_strokeStar","a","closePath","x","y","n","inset","save","translate","i","rotate","restore","decodePicture","hexPic","categories","res","padded","valid","substr","length","catName","numCat","parseInt","charAt","shape2","shape3","shape4","DiagramCanvas","props","diagram","refs","canvas","getContext","ref","width","height","Component","TestCase","selectShapeHandler","e","btnShape","currentTarget","newAnswer","state","answer","newBtnStates","btnStates","setState","resetAnswerHandler","btnStatesCopy","key","nextCaseHandler","cat","toString","encodePicture","A1","B1","C1","D1","E1","F1","A2","B2","C2","D2","E2","F2","A3","B3","C3","D3","E3","F3","A4","B4","C4","D4","E4","F4","init","case","className","line1","arg1","arg2","result","line2","line3","onClick","map","c","Iqresult","console","log","axios","get","then","response","data","catch","err","scores","score","questions","numberOfCases","ergebnis","round","userName","testName","elapsedTime","complexity","action","type","value","IQttyTest","clearTimeout","caseTimer","currentCaseIdx","animOn","endOfTest","answers","loadTimer","setTimeout","animTimeout","bind","animLimit","cases","testTime","Date","getTime","caseStartTimestamp","answersCopy","currentScore","answerCorrect","finishTest","caseLimit","test","caseTimeout","sysAnswer","correct","testResult","toFixed","post","fromServer","testId","resFromApi","testData","arrayOfCases","curTest","src","alt","curCase","signup","username","password","login","IqNavbar","bg","user","to","delete","setUser","IqStartpage","React","IqSignup","error","handleChange","event","target","name","handleSubmit","preventDefault","message","history","Form","onSubmit","Group","Label","htmlFor","Control","onChange","Alert","variant","Button","IqLogin","IqTraining","href","IqResultlist","results","resultList","caseNumber","resultInPercentage","_id","IqAdmin","onclick","max","min","App","trainingRoute","resultListRoute","resultRoute","testRoute","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c80e004.chunk.js","sourcesContent":["export default class Diagram {\r\n    constructor(size,ctx,shapes) {\r\n      this.size = size;\r\n      this.bkgd = \"white\";\r\n      this.color = \"black\";\r\n      this.ctx = ctx; \r\n      this.ctx.fillStyle = this.bkgd;\r\n      this.ctx.fillRect(0,0,size,size);\r\n      this.ctx.fillStyle = this.color;\r\n      this.ctx.strokeStyle = this.color;\r\n      this.ctx.lineWidth = 1;\r\n      this.symbols = shapes; \r\n   }\r\n   \r\n    addSymbol(id) {\r\n      if (this.symbols.includes(id)) return;\r\n      this.symbols.push(id);\r\n      this._drawSymbol(id);\r\n    }\r\n   \r\n    deleteSymbol(id) {\r\n      if (!this.symbols.includes(id)) return;\r\n      this.symbols.splice(this.symbols.indexOf(id), 1);\r\n      this._clear();\r\n      this._redraw();\r\n    }\r\n  \r\n    clearDiagram() {\r\n      this.symbols = [];\r\n      this._clear();\r\n    }    \r\n  \r\n    _clear() {\r\n      this.ctx.clearRect(0,0,this.size,this.size);\r\n      this.ctx.fillStyle = this.bkgd;\r\n      this.ctx.fillRect(0,0,this.size,this.size);\r\n      this.ctx.fillStyle = this.color;\r\n    }\r\n  \r\n    _redraw() {\r\n      let s;\r\n      for (s of this.symbols) this._drawSymbol(s);\r\n    }\r\n  \r\n    _drawSymbol(id) {\r\n      switch (id)  {\r\n        case \"A1\": this._drawA1(); break;\r\n        case \"A2\": this._drawA2(); break;\r\n        case \"A3\": this._drawA3(); break;\r\n        case \"A4\": this._drawA4(); break;\r\n        case \"B1\": this._drawB1(); break;\r\n        case \"B2\": this._drawB2(); break;\r\n        case \"B3\": this._drawB3(); break;\r\n        case \"B4\": this._drawB4(); break;\r\n        case \"C1\": this._drawC1(); break;\r\n        case \"C2\": this._drawC2(); break;\r\n        case \"C3\": this._drawC3(); break;\r\n        case \"C4\": this._drawC4(); break;\r\n        case \"D1\": this._drawD1(); break;\r\n        case \"D2\": this._drawD2(); break;\r\n        case \"D3\": this._drawD3(); break;\r\n        case \"D4\": this._drawD4(); break;\r\n        case \"E1\": this._drawE1(); break;\r\n        case \"E2\": this._drawE2(); break;\r\n        case \"E3\": this._drawE3(); break;\r\n        case \"E4\": this._drawE4(); break;\r\n        case \"F1\": this._drawF1(); break;\r\n        case \"F2\": this._drawF2(); break;\r\n        case \"F3\": this._drawF3(); break;\r\n        case \"F4\": this._drawF4(); break;\r\n        default:\r\n     }         \r\n   }\r\n  \r\n    _drawA1() {\r\n      //Line vertical\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, 0);\r\n      this.ctx.lineTo(this.size/2, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA2() {\r\n      //Line horizontal\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0, this.size/2);\r\n      this.ctx.lineTo(this.size, this.size/2);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA3() {\r\n      //Diagonal left\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0, 0);\r\n      this.ctx.lineTo(this.size, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawA4() {\r\n      //Diagonal right\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size, 0);\r\n      this.ctx.lineTo(0, this.size);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB1() {\r\n      //Arc top left\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 1*Math.PI, 1.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB2() {\r\n      //Arc top right\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 1.5*Math.PI, 0);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawB3() {\r\n      //Arc bottom left\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 0.5*Math.PI, 1*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n    \r\n    _drawB4() {\r\n      //Arc bottom right\r\n      const r = this.size/2 - 6;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2, this.size/2, r, 0, 0.5*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawC1() {\r\n      //Dot top left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(4,4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC2() {\r\n      //Dot top right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-4,4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC3() {\r\n      //Dot bottom right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-4,this.size-4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawC4() {\r\n      //Dot bottom left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(4,this.size-4, 2.5, 0, 2*Math.PI);\r\n      this.ctx.fill();\r\n    }\r\n  \r\n    _drawD1() {\r\n      //Star small\r\n      const r = 0.1*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD2() {\r\n      //Star medium\r\n      const r = 0.16*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD3() {\r\n      //Star large\r\n      const r = 0.22*this.size;\r\n      this._strokeStar(this.ctx, this.size/2, this.size/2, r, 8, 0.6)\r\n    }\r\n  \r\n    _drawD4() {\r\n      //Square\r\n      const a = this.size - 4;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(2, 2);\r\n      this.ctx.lineTo(a+2, 2);\r\n      this.ctx.lineTo(a+2, a+2);\r\n      this.ctx.lineTo(2, a+2);\r\n      this.ctx.closePath();\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawE1() {\r\n      //Arrow up\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, this.size/2-8);\r\n      this.ctx.lineTo(this.size/2+6, this.size/2);\r\n      this.ctx.lineTo(this.size/2-6, this.size/2);\r\n      this.ctx.closePath();\r\n      this.ctx.fill();\r\n      this.ctx.lineWidth = 4;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.size/2, this.size/2);\r\n      this.ctx.lineTo(this.size/2, this.size/2+8);\r\n      this.ctx.stroke();\r\n      this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE2() {\r\n    //Arrow right\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2+8, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2+6);\r\n    this.ctx.lineTo(this.size/2, this.size/2-6);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2-8, this.size/2);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE3() {\r\n    //Arrow down\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2+8);\r\n    this.ctx.lineTo(this.size/2-6, this.size/2);\r\n    this.ctx.lineTo(this.size/2+6, this.size/2);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2-8);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawE4() {\r\n    //Arrow left\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2-8, this.size/2);\r\n    this.ctx.lineTo(this.size/2, this.size/2-6);\r\n    this.ctx.lineTo(this.size/2, this.size/2+6);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.size/2, this.size/2);\r\n    this.ctx.lineTo(this.size/2+8, this.size/2);\r\n    this.ctx.stroke();\r\n    this.ctx.lineWidth = 1;\r\n    }\r\n  \r\n    _drawF1() {\r\n      //Circle top\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2,6, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF2() {\r\n      //Circle bottom\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size/2,this.size-6, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF3() {\r\n      //Circle left\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(6,this.size/2, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _drawF4() {\r\n      //Circle right\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(this.size-6,this.size/2, 3, 0, 2*Math.PI);\r\n      this.ctx.stroke();\r\n    }\r\n  \r\n    _strokeStar(ctx, x, y, r, n, inset) {\r\n    //Adaptable to any shape with rotational symmetry\r\n    //from https://stackoverflow.com/questions/25837158/how-to-draw-a-star-by-using-canvas-html5\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.translate(x, y);\r\n    ctx.moveTo(0,0-r);\r\n    for (var i = 0; i < n; i++) {\r\n        ctx.rotate(Math.PI / n);\r\n        ctx.lineTo(0, 0 - (r*inset));\r\n        ctx.rotate(Math.PI / n);\r\n        ctx.lineTo(0, 0 - r);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    }\r\n  \r\n  }  //end of Diagram class\r\n\r\n  export function decodePicture(hexPic) {\r\n    //return array of symbols for display in a diagram\r\n    let categories = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\r\n    let res = [];\r\n    \r\n    //Padding leading zeros to get the hexPic of LENGTH 6!!!\r\n    let padded = \"0000000000\" + hexPic;\r\n    let valid = padded.substr(padded.length - 6);\r\n    \r\n    for (let i = 0; i < categories.length; i++)  {\r\n      let catName = categories[i];\r\n      let numCat = parseInt(valid.charAt(i), 16);\r\n      let shape1 =  (numCat & 8) >> 3;\r\n      let shape2 =  (numCat & 4) >> 2;\r\n      let shape3 =  (numCat & 2) >> 1;\r\n      let shape4 =  (numCat & 1);\r\n      if (shape1) res.push(catName+\"1\");  \r\n      if (shape2) res.push(catName+\"2\");  \r\n      if (shape3) res.push(catName+\"3\");  \r\n      if (shape4) res.push(catName+\"4\");  \r\n    } \r\n    return res;   \r\n  }\r\n  \r\nexport function encodePicture(symbols) {\r\n    //return a hexadecimal string 6-char long\r\n    let categories = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\r\n    let res = \"\";  \r\n    for (let i = 0; i < categories.length; i++)  {  \r\n      let cat =  categories[i];\r\n      let d1 = symbols.includes(cat+\"1\");\r\n      let d2 = symbols.includes(cat+\"2\");\r\n      let d3 = symbols.includes(cat+\"3\");\r\n      let d4 = symbols.includes(cat+\"4\");\r\n      let r = (d1*8 + d2*4 + d3*2 + d4).toString(16);\r\n      res = res + r;\r\n    }  \r\n    return res;  \r\n  } \r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Diagram from './iq_utils.js';\r\n\r\nexport default class DiagramCanvas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.size = 48; \r\n        this.diagram = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(\">>>>>>>> componentDidMount...\");\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        this.diagram = new Diagram (this.size, ctx, this.props.shapes);\r\n        this.diagram._redraw();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(\">>>>>>>> componentDidUpdate...\");\r\n        this.diagram.symbols = this.props.shapes;\r\n        this.diagram._clear();\r\n        this.diagram._redraw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas ref=\"canvas\" width={this.size} height={this.size}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../iq_test-style.css';\r\nimport DiagramCanvas from './iq_diagram-canvas.js';\r\nimport {decodePicture, encodePicture} from \"./iq_utils.js\";\r\n\r\nexport default class TestCase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            answer: [],\r\n            btnStates: {A1:\"off\", B1:\"off\", C1:\"off\", D1:\"off\", E1:\"off\", F1:\"off\",\r\n                        A2:\"off\", B2:\"off\", C2:\"off\", D2:\"off\", E2:\"off\", F2:\"off\",\r\n                        A3:\"off\", B3:\"off\", C3:\"off\", D3:\"off\", E3:\"off\", F3:\"off\",\r\n                        A4:\"off\", B4:\"off\", C4:\"off\", D4:\"off\", E4:\"off\", F4:\"off\"}\r\n        }\r\n    }\r\n\r\n\r\n    selectShapeHandler = (e) => {\r\n        const btnShape = e.currentTarget.id;\r\n        const newAnswer = [...this.state.answer];\r\n        const newBtnStates = {...this.state.btnStates};\r\n\r\n        if (newBtnStates[btnShape] === \"off\") {//adding to the Answer, duplicates not allowed\r\n            if (newAnswer.indexOf(btnShape) < 0) {\r\n              newAnswer.push(btnShape);\r\n              newBtnStates[btnShape] = \"on\";\r\n              this.setState ({answer: newAnswer, btnStates: newBtnStates});\r\n            }\r\n        }\r\n        else if (newBtnStates[btnShape] === \"on\") {//removing from the Answer,\r\n            if (newAnswer.indexOf(btnShape) >= 0) {\r\n                newAnswer.splice(newAnswer.indexOf(btnShape), 1);\r\n                newBtnStates[btnShape] = \"off\";\r\n                this.setState ({answer: newAnswer, btnStates: newBtnStates});\r\n            }\r\n        }\r\n    }\r\n\r\n    resetAnswerHandler = () => {\r\n        const btnStatesCopy = {...this.state.btnStates};\r\n        for (let key in btnStatesCopy) btnStatesCopy[key] = \"off\";\r\n        this.setState ({answer: [], btnStates: btnStatesCopy});\r\n    }\r\n\r\n    nextCaseHandler = () => {\r\n        this.props.nextCaseHandler(encodePicture(this.state.answer))\r\n        this.resetAnswerHandler();\r\n    }\r\n\r\n           \r\n    render() {\r\n\r\n        const init = (this.props.case === null); \r\n  \r\n        return (\r\n            <div>\r\n\r\n                <div id =\"test-and-loader\">\r\n\r\n                    <div id=\"test-container\">\r\n                        <div className=\"canvas-matrix\">  \r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line1.result)}/></div>\r\n                            </div>\r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line2.result)}/></div>\r\n                            </div>\r\n                            <div className=\"board-row\">\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line3.arg1)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={init ? [] : decodePicture(this.props.case.line3.arg2)}/></div>\r\n                                <div className=\"board-cell\"><DiagramCanvas shapes={this.state.answer}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"nav-buttons\">\r\n                            <button className={init ? \"nav-btn-init\": \"nav-btn\"}   \r\n                                    onClick={this.nextCaseHandler}><h3>{init ? \"Start Test\": \"Submit\"}</h3></button>\r\n                            <button className=\"nav-btn\"  \r\n                                    onClick={this.resetAnswerHandler}><h3>Reset</h3></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"canvas-matrix\">\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+1]} \r\n                                key={c+1} id={c+1} onClick={this.selectShapeHandler} >\r\n                            <DiagramCanvas shapes={[c+1]} />\r\n                        </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+2]} \r\n                                key={c+2} id={c+2} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+2]} />\r\n                        </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+3]} \r\n                                key={c+3} id={c+3} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+3]} />\r\n                        </button>\r\n                        )}\r\n                     </div>\r\n                    <div className=\"menu-row\">\r\n                        {[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].map(c =>                     \r\n                        <button className={\"menu-btn-\"+this.state.btnStates[c+4]} \r\n                                key={c+4} id={c+4} onClick={this.selectShapeHandler}>\r\n                            <DiagramCanvas shapes={[c+4]} />\r\n                        </button>\r\n                        )}                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../stylesheets/iq_result.css';\r\nimport axios from \"axios\";\r\n\r\nexport class Iqresult extends Component {\r\n    state = {\r\n      result: []\r\n    };\r\n\r\n    componentDidMount() {\r\n      console.log(\"App --> componentDidMount()\")\r\n      axios.get(\"/api/results\")\r\n          .then(response => {\r\n              /* console.log(\"App --> Promise resolved\") */\r\n              this.setState({result: response.data});\r\n          })\r\n      .catch(err=>{\r\n        console.log(\"Fehler bei iq_result Component Did mount\", err);\r\n      })\r\n     \r\n  }\r\n \r\n  render() {\r\n   /*  console.log(this.state.result);\r\n    console.log(this.state.result.userName); */\r\n    let scores = this.state.result.score;\r\n    let questions = this.state.result.numberOfCases;\r\n    let ergebnis = (Math.round((scores / questions) * 100)).toString();\r\n    console.log(typeof(ergebnis))\r\n    return (\r\n      <div className=\"resultPage\">\r\n        <div className=\"resultHeader\">\r\n          <h1>\r\n            Result of your current test\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"tableresult\">\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Name :</div>\r\n            <div className=\"resulttd\">{this.state.result.userName}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Test Name :</div>\r\n            <div className=\"resulttd\">{this.state.result.testName}</div>\r\n          </div>\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Elapsed Time :</div>\r\n            <div className=\"resulttd\">{this.state.result.elapsedTime}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Executed Cases :</div>\r\n            <div className=\"resulttd\">{this.state.result.numberOfCases}</div>\r\n          </div>\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Your Score :</div>\r\n            <div className=\"resulttd\">{this.state.result.score}</div>\r\n          </div>\r\n          <div className=\"resulttr\">\r\n            <div className=\"resultth\">Complexity :</div>\r\n            <div className=\"resulttd\">{this.state.result.complexity}</div>\r\n          </div>\r\n          <div className=\"resulttr1\">\r\n            <div className=\"resultth\">Percentage :</div>\r\n            <div className=\"resulttd\">{ergebnis}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"resultfooter\">\r\n          <h1>You have reached : {this.state.result.score}  Points</h1>\r\n        </div>\r\n\r\n        <div className=\"buttonbox\">\r\n          <form action=\"/training\">\r\n            <input className=\"rbutton\" type=\"submit\" value=\"Training\" />\r\n          </form>\r\n\r\n          <form action=\"/resultlist\">\r\n            <input className=\"rbutton\" type=\"submit\" value=\"Resultlist\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Iqresult\r\n\r\n","import React, { Component } from 'react'\r\nimport '../iq_test-style.css';\r\nimport TestCase from './iq_test-case.js';\r\nimport Iqresult from \"./iq_result\";\r\nimport axios from 'axios';\r\n\r\nexport default class IQttyTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.caseStartTimestamp = 0;\r\n    this.testTime = 0;            //sum of case times \r\n    this.caseLimit = 300 * 1000;  //time limit per case\r\n    this.animLimit = 2 * 1000;    //time between cases\r\n    this.caseTimer = 0;\r\n    this.loadTimer = 0;\r\n    this.currentScore = 0;\r\n\r\n    this.state = {\r\n      test: null,   //Test obj from DB  \r\n      cases: null,  //Array of cases from DB \r\n      currentCaseIdx: -1,\r\n      answers: [],\r\n      endOfTest: false,\r\n      animOn: false\r\n    }\r\n  }\r\n    \r\n  nextCaseHandler = (answer) => {\r\n    clearTimeout(this.caseTimer);\r\n\r\n    if (this.state.currentCaseIdx === - 1) {        //Load the first case\r\n      this.setState ({\r\n        currentCaseIdx: this.state.currentCaseIdx + 1,\r\n        animOn: true,\r\n        endOfTest: false,\r\n        answers: []\r\n      });\r\n      this.loadTimer = setTimeout(this.animTimeout.bind(this), this.animLimit);\r\n      return;\r\n    }\r\n\r\n    if (this.state.currentCaseIdx === this.state.cases.length - 1) {  //Finish the test\r\n\r\n      this.testTime = this.testTime + ((new Date()).getTime() - this.caseStartTimestamp);\r\n\r\n      const answersCopy = [...this.state.answers];\r\n      answersCopy.push(answer)\r\n      //check answer and update score\r\n      this.currentScore = this.answerCorrect(answer) ? this.currentScore + 1 : this.currentScore;\r\n\r\n      this.finishTest();\r\n\r\n      this.setState({answers: answersCopy,\r\n                     animOn: false,\r\n                     endOfTest: true  \r\n      });\r\n      return;\r\n    }\r\n    \r\n    this.testTime = this.testTime + ((new Date()).getTime() - this.caseStartTimestamp);\r\n    \r\n    //check answer and update score\r\n    this.currentScore = this.answerCorrect(answer) ? this.currentScore + 1 : this.currentScore;\r\n\r\n    const answersCopy = [...this.state.answers];\r\n    answersCopy.push(answer)\r\n    this.setState ({\r\n      currentCaseIdx: this.state.currentCaseIdx + 1,\r\n      animOn: true,\r\n      endOfTest: false,\r\n      answers: answersCopy\r\n    });\r\n\r\n    this.loadTimer = setTimeout(this.animTimeout.bind(this), this.animLimit);\r\n    \r\n  }\r\n\r\n  animTimeout() {\r\n    this.caseStartTimestamp = (new Date()).getTime();\r\n    this.setState ({animOn: false});\r\n    this.caseTimer = setTimeout(this.caseTimeout.bind(this), this.caseLimit);\r\n\r\n  }\r\n    \r\n  caseTimeout() {\r\n      this.nextCaseHandler(\"000000\");\r\n  }\r\n\r\n  answerCorrect(answer) { \r\n    const sysAnswer = this.state.cases[this.state.currentCaseIdx].line3.result;\r\n    const correct = (parseInt(answer,16) === parseInt(sysAnswer,16)); \r\n    console.log(\">>> System answer: \" + sysAnswer + \" Your answer: \" + answer + \" is \" + correct );\r\n    return correct;\r\n  }\r\n\r\n  finishTest() {\r\n\r\n    //NOTE: In order to store answers, a model extension will be required\r\n    //Suggestion: store the testId as well\r\n\r\n    const testResult = { \r\n      userName: this.props.userName, \r\n      testName: this.state.test.testName,\r\n      complexity: this.state.test.complexity,\r\n      elapsedTime: (this.testTime/1000).toFixed(1),\r\n      numberOfCases: this.state.test.cases.length,\r\n      score: this.currentScore\r\n    }\r\n\r\n    //Send result to the DB\r\n    axios.post(\"/api/results\", testResult) \r\n      .then(fromServer => {  \r\n        console.log(\"Result stored. Response from server: \" + fromServer.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"ERROR while storing the test result: \", err);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.props.testId === \"random\")\r\n      axios.get(`/api/tests/random`)  \r\n        .then(resFromApi => {\r\n          this.setState({\r\n            test: resFromApi.data.testData,\r\n            cases: resFromApi.data.arrayOfCases\r\n          })\r\n        });\r\n    else \r\n      axios.get(`/api/tests/${this.props.testId}`)\r\n        .then(resFromApi => {\r\n          this.setState({\r\n            test: resFromApi.data.testData,\r\n            cases: resFromApi.data.arrayOfCases\r\n          })\r\n        });      \r\n  }\r\n\r\n  render() {\r\n    if (this.state.endOfTest) {\r\n      return (\r\n        <div>\r\n          <Iqresult />\r\n        </div>\r\n      );  //=> result page\r\n    }\r\n    else if (this.state.animOn) {\r\n      //const curTest = this.props.test;\r\n      const curTest = this.state.test;\r\n      return (\r\n          <div>\r\n            <div id=\"header\">\r\n                <div><h2><span>Test: </span> <span id=\"test-name\">{curTest.testName}</span></h2></div>   \r\n                <div>\r\n                    <h3 id=\"current-case\">\r\n                      Case: {this.state.currentCaseIdx + 1} / {this.state.cases.length}\r\n                    </h3>\r\n                </div>   \r\n                <div><h3><span>Complexity: </span><span id=\"complexity\">{curTest.complexity}</span></h3></div>  \r\n            </div>\r\n            <div>\r\n              <img src=\"../loader.gif\" alt=\"\" width=\"300\"/>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    else if (this.state.currentCaseIdx === -1) {\r\n      return (\r\n        <div>\r\n            <TestCase case={null} nextCaseHandler={this.nextCaseHandler} />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      const curTest = this.state.test;\r\n      const curCase = this.state.cases[this.state.currentCaseIdx];\r\n      return (\r\n        <div>\r\n            <div id=\"header\">\r\n                <div><h2><span>Test: </span> <span id=\"test-name\">{curTest.testName}</span></h2></div>   \r\n                <div>\r\n                    <h3 id=\"current-case\">\r\n                      Case: {this.state.currentCaseIdx + 1} / {this.state.cases.length}\r\n                    </h3>\r\n                </div>   \r\n                <div><h3><span>Complexity: </span><span id=\"complexity\">{curTest.complexity}</span></h3></div>  \r\n            </div>\r\n            <TestCase case={curCase} nextCaseHandler={this.nextCaseHandler} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\n\r\nconst signup = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/signup\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/login\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  axios.delete(\"/api/auth/logout\");\r\n};\r\n\r\nexport { signup, login, logout };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as Nav } from \"react-bootstrap\";\r\nimport { logout } from \"../services/auth\";\r\n\r\nconst IqNavbar = props => {\r\n  const handleLogout = () => {\r\n    // destroys the session on the server\r\n    logout();\r\n    // updates the `user` state in App\r\n    props.setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Nav className=\"nav justify-content-end\" bg=\"primary\">\r\n      {props.user ? (\r\n        <div>\r\n          <Link to=\"/\">Welcome {props.user.username}</Link>\r\n          <Link to=\"/training\">Training</Link>\r\n          <Link to=\"/result\">Result</Link>\r\n          <Link to=\"/resultlist\">Resultlist</Link>\r\n          <Link to=\"/\" onClick={handleLogout}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/signup\">Signup</Link>\r\n          <Link to=\"/login\">Login</Link>\r\n        </div>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default IqNavbar;\r\n","import React from \"react\";\r\nimport '../stylesheets/iq_startpage.css';\r\n\r\nclass IqStartpage extends React.Component {\r\n    render() {\r\n        return (            \r\n            <section className = \"homePage-container\">\r\n                <div>\r\n                    <h1>IQtty</h1>\r\n                    <p>Use our brain trainer</p>\r\n                    <p>Prepare for Assessment Centers and Logic-Tests</p>\r\n                    <p>Signup and try our amazing brain game</p>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default IqStartpage;","import React, { Component } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass IqSignup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    signup(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/training\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h2>Signup</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Sign up</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqSignup;\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass IqLogin extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    login(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/training\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Login</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Log in</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IqLogin;\r\n","import React, { Component } from 'react'\r\nimport \"../stylesheets/iq_training.css\"\r\n\r\nclass IqTraining extends Component {\r\n  render() {\r\n    return (\r\n      <section className = \"trainingsPage-container\">\r\n        <div>\r\n          <h1>Welcome to IQtty training</h1>\r\n          <p>Matrix tests are used in assessment centers to examine your skills in inductive reasoning.</p>\r\n          <p>A matrix consists of nine boxes. One box is empty.</p>\r\n          <p>Your task is to discover logical connections and compose the empty box based on the rule you found.</p>\r\n          <p>Click here to start a test</p>\r\n          \r\n          <form className=\"trainingsPage-button-box\" action = \"/test/new\" >          \r\n              <input className=\"trainingsPage-button\" type=\"submit\" value=\"Start test\"/>\r\n          </form>    \r\n          \r\n          <p>Your results you can find under\r\n            <a href=\"/resultlist\"> Test Result List</a>\r\n          </p>        \r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IqTraining;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../stylesheets/iq_resultlist.css'\r\n\r\nclass IqResultlist extends Component {\r\n  state = {\r\n    results: []        \r\n    };       \r\n    \r\n  componentDidMount() {\r\n      console.log(\"AllResults --> componentDidMount()\")\r\n      axios.get(\"/api/resultlist\")\r\n          .then(response => {\r\n              console.log(\"AllResults --> Promise resolved\")\r\n              console.log(\"Promise resolved Data\", response.data)\r\n              this.setState({ results: response.data })\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Error occured: \", err);\r\n          });\r\n  }\r\n\r\n  render() {\r\n       \r\n    const resultList = this.state.results.map((result) => {\r\n      let caseNumber = result.numberOfCases;\r\n      let score = result.score;\r\n      let resultInPercentage = Math.round(score/caseNumber * 100)\r\n\r\n      return (\r\n        <div className=\"trResultlist\" key={result._id}>\r\n          <div className=\"tdResultlist\">{result.userName}</div>\r\n          <div className=\"tdResultlist\">{result.testName}</div>\r\n          <div className=\"tdResultlist\">{result.complexity}</div>\r\n          <div className=\"tdResultlist\">{result.elapsedTime}</div>\r\n          <div className=\"tdResultlist\">{result.numberOfCases}</div>\r\n          <div className=\"tdResultlist\">{result.score}</div>\r\n          <div className=\"tdResultlist\">{resultInPercentage} %</div>\r\n        </div>\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <div>      \r\n        <div className = \"resultlistPage\">\r\n          <section className= \"table-resultlist\">\r\n            <h1 className=\"header\">Your Test Results</h1>\r\n            <div className=\"tableResultlist-box\">        \r\n              <div className=\"tableResultlist\">\r\n                <div className=\"trResultlist\">\r\n                  <div className=\"thResultlist\">User</div>\r\n                  <div className=\"thResultlist\">Test</div>\r\n                  <div className=\"thResultlist\">Complexity</div>\r\n                  <div className=\"thResultlist\">Elapsed Time</div>\r\n                  <div className=\"thResultlist\">Number of Test Cases</div>\r\n                  <div className=\"thResultlist\">Score</div>\r\n                  <div className=\"thResultlist\">Result</div>\r\n                </div>\r\n                  \r\n                {resultList}            \r\n                \r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IqResultlist;","import React, { Component } from 'react';\r\nimport '../stylesheets/iq_admin.css';\r\n\r\nexport default class IqAdmin extends Component {\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Admin Page</h1>\r\n                <div className=\"tableAdmin\">\r\n                <ul>\r\n                <p>\r\n               <li><button onclick= \"generateComponents()\">1. Components</button></li>\r\n                </p>\r\n                <p>\r\n                <li><button onclick=\"generateCases()\">2. Cases</button>\r\n                Number of Components : <input  id=\"compNumber\" type=\"number\" max=\"6\" min=\"1\" alt=\"Number of Components\"/></li>\r\n                </p>\r\n                <p>\r\n                <button onclick=\"generateTests()\">3. Tests</button>\r\n                Number of Testcases : <input id=\"numbTc\" type=\"number\"  max=\"10\" min=\"1\"/>\r\n                Max case complexity : <input id=\"caseComplexity\" type=\"number\" max=\"3\" min=\"1\"/>\r\n                </p>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","//import React, { Component } from 'react';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport IQttyTest from \"./components/iq_test.js\";\r\nimport \"./App.css\";\r\nimport {Switch, Route, Redirect } from \"react-router-dom\";\r\nimport IqNavbar from \"./components/iq_Navbar\";\r\nimport IqStartpage from \"./components/iq_Startpage\";\r\n/* import Projects from \"./components/Projects\";\r\nimport ProjectDetail from \"./components/ProjectDetail\";\r\nimport TaskDetail from \"./components/TaskDetail\"; */\r\nimport IqSignup from \"./components/iq_Signup\";\r\nimport IqLogin from \"./components/iq_Login\";\r\nimport IqTraining from \"./components/iq_Training\";\r\nimport IqResultlist from \"./components/iq_Resultlist\";\r\nimport Iqresult from \"./components/iq_result\";\r\nimport IqAdmin from \"./components/iq_admin.js\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n  state = {\r\n    user: this.props.user\r\n\r\n  }\r\n\r\n  setUser = user => {\r\n    this.setState({\r\n      user: user\r\n    })\r\n  }\r\n\r\n  trainingRoute = props => {\r\n    if (this.state.user) {\r\n      return <IqTraining {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n\r\n  resultListRoute = props => {\r\n    if (this.state.user) {\r\n      return <IqResultlist {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n\r\n  resultRoute = props => {\r\n    if (this.state.user) {\r\n      return <Iqresult />;   \r\n    } else {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  }\r\n\r\n  testRoute = props => {\r\n    if (this.state.user) {\r\n      return <IQttyTest testId={\"random\"} userName={this.state.user.username} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  }\r\n\r\n  render () {\r\n\r\n    //const currentTest = testData[0];\r\n  /* projectsRoute = props => {\r\n    if (this.state.user) {\r\n      return <Projects {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  } */\r\n\r\n \r\n\r\n  \r\n\r\n\r\n\r\n    return (\r\n              \r\n      <div className=\"App\">\r\n        <IqNavbar user={this.state.user} setUser={this.setUser} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={IqStartpage} />\r\n          <Route exact path=\"/signup\" render={\r\n            props => <IqSignup {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/login\" render={\r\n            props => <IqLogin {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/training\" render={this.trainingRoute}/>\r\n          <Route exact path=\"/resultlist\" render={this.resultListRoute}/>\r\n          <Route exact path=\"/xadmin\" component={IqAdmin}/>\r\n          <Route exact path=\"/test/new\" render={this.testRoute}/>\r\n          <Route exact path=\"/result\" render={this.resultRoute}/>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\naxios.get(\"/api/auth/loggedin\").then(response => {\r\n  const user = response.data;\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App user={user} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}